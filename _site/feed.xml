<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nathan Brenner</title>
    <description>A sample of my work and thoughts</description>
    <link>http://nathan-j-brenner.github.io//</link>
    <atom:link href="http://nathan-j-brenner.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 21 Sep 2015 18:21:47 -0700</pubDate>
    <lastBuildDate>Mon, 21 Sep 2015 18:21:47 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Getting paid to write</title>
        <description>&lt;p&gt;As I was driving to Portland this morning, there was an article on NPR about the Writer’s Guild of America.  If you author a book, should you get paid for it? Should you get paid enough that you can make a living off of your writing?  And who should publish your work: You or a company?&lt;/p&gt;

&lt;p&gt;I can’t relate directly.  Indirectly, I understand how frustrating it can sometimes be when you have a project in mind but you’re limited on how much time you can put into that project due to seemingly silly external variables, like the cost of living.  If you can’t make a living off of the work, then maybe you’re investing your time in activity that can’t provide the basic necessities of life and you should reevaluate what you’re doing with the little bit of time you have.  &lt;/p&gt;

&lt;p&gt;By doing something that you want to do may actually be a waste of your time.  Maybe it’s better to do something that you don’t want to do for a little while so that with the time left over you can do the things you like to do, like take on new projects or write another book.  &lt;/p&gt;

&lt;p&gt;When I was growing up, I earned an allowance.  I think it was a dollar a week for which in turn I’d do chores around the house that I’d probably would have done anyway because I was too young to question my parents.  I didn’t have a need for that money; my parents gave me everything I needed.  The point was to gain a respect for my time so that at some point, I would be able to easily make the decision to trade my time for money at a rate that would let me spend the rest of my time how I choose.  &lt;/p&gt;

&lt;p&gt;Ironically, as I idolized my father who is a public school teacher, I got the silly idea that my time wasn’t worth very much, so I followed that path of doing work that I was really passionate about.  Another bit of irony was how he was just telling me recently that if you pay people more, then they’ll be more motivated to do a good job.  If people can pay for the basic necessities, then their financial stress will hinder their job performance.&lt;/p&gt;

&lt;p&gt;Bottom line, if you’re an artist and you want to be paid more, do work that is considered valueable.  If you’re a broke writer, teach kids how to read. That’s a terrible example, and there’s a lot of writers that turn to teaching and unfortunately, that’ll probably mean you need to learn the art of teaching, but there’s commonality.  That begs the question: Is art universal?  This depends on the definition of the word art, just like how writers define language.  It’s my perception that launguage requires a dynamic, and organized flow of communication between more than one party.&lt;/p&gt;

&lt;p&gt;Better yet, if you’re a writer, I’d be you know a lot about communication so why not communicate to others through a different type of language such as html or even JavaScript?  The leap from writing novels to programs is quite a bit.  Programming isn’t something that’s easy to figure out, but there’s a deep rooted level of connection between every different form of art.&lt;/p&gt;

&lt;p&gt;Enough of this vague ramble.  Lately, I’ve been working through the D3.js course on Treehouse, and it’s tough.  I can’t wait to finish it so I can dive into the documentation and start doing some more engaged form of learning, which is actually writing code.  &lt;/p&gt;

&lt;p&gt;I’m at that point with Angular. I’m in the middle of another spa.  It’s called taskManager.  Imagine &lt;a href=&quot;https://trello.com/&quot;&gt;trello&lt;/a&gt;.  Your boss has a bunch of stuff that needs to get done, so he creates a list, and then he assigns those items to team members.  I didn’t intend to create a trello clone; I wanted to get better at creating programs with Angular so of course the code is probably messier than it needs to be.  I got the idea from &lt;a href=&quot;https://www.youtube.com/watch?v=TRrL5j3MIvo&quot;&gt;50 Angular examples&lt;/a&gt;.  I stopped midway to do some applicable coding and got sidetracked. &lt;a href=&quot;http://ionicframework.com/&quot;&gt;Firebase&lt;/a&gt; might get added on to give it a backend. I also added Angular into the &lt;a href=&quot;http://nathan-j-brenner.github.io/portfolio/&quot;&gt;portfolio&lt;/a&gt; page of this site.  It made it much easier to maintain, and I’ll probably add in some &lt;a href=&quot;https://angular-ui.github.io/&quot;&gt;AngularUI&lt;/a&gt; after I have a more solid grasp of Angular.&lt;/p&gt;

&lt;p&gt;I’ve got another project underway that involves &lt;a href=&quot;http://ionicframework.com/&quot;&gt;Ionic&lt;/a&gt;. Ionic is a framework that lets you build native apps out of web based apps. So create the web based app with HTML, CSS, and JavaScript, specifically with Angular, and you Ionic will generate the native version so no need to learn Objective-C or Android.&lt;/p&gt;

&lt;p&gt;I write for free and code for free willingly as means to promote a product.  That product’s ability to learn is more valueable than what that product already knows.  Coding for free is really just the vehicle to develop that product further. I’ve been paid to write, which for the web is hard because there’s always room for revision.  The easiest thing to do is stop when the money stops coming in.  I got into coding a year ago because I wanted to get paid more.  Right now that means starting with less than what I used to make.  I’m a little bit nervous for October 9th. Any coding for free projects will be cut back and I’ll take on the role to raise my son.  The goal is to get to the point where I can make enough money so that my wife can cut back more on her work. Minimum wage jobs don’t make that possible, and neither does artistic endevors like teaching, even if you have more education and training in that field than most of the people in the world.&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Sep 2015 00:00:00 -0700</pubDate>
        <link>http://nathan-j-brenner.github.io//writing-for-free</link>
        <guid isPermaLink="true">http://nathan-j-brenner.github.io//writing-for-free</guid>
        
        
      </item>
    
      <item>
        <title>Sleeping with bugs</title>
        <description>&lt;p&gt;Hey, it’s Labor Day Weekend.  My parents from Vegas are visiting, and it’s their first time to see their other grandchild.&lt;/p&gt;

&lt;p&gt;I just wrapped up a 3 week stint with the army.  Every year, I have to do two weeks of active duty.  My unit travels around the state and gives free concerts.  The due date for our kid was right in the middle of it, and my chain of command gave my the opportunity to stay home and work for another unit in place so I could stay close to home.   This didn’t leave much brain space for coding, and this morning I woke up eagerly to work out some bugs.&lt;/p&gt;

&lt;p&gt;A lot of my days start out like this.  In most cases, I leave the code broken or messy to rush off to do something else or without knowing how to fix it.  Through the night, my brain dreams up possible solutions.&lt;/p&gt;

&lt;p&gt;The express.js class just came out on treehouse, so I’m eager to work on it as a review.  I spent a bunch of time with express servers in javascript immersion.  By the nature of the class, a lot of learning takes place through chaos.  Treehouse is great for me because it’s so sequential, and I feel like I’ve got a bunch of potholes on my understanding of the server side code.  There’s a bunch of tutorials on node that I want to dig into for the same reason.&lt;/p&gt;

&lt;p&gt;I’m also at the point with Angular.js that I can do enough to break things.  Collaboration would be helpful at this point. I’m noticing a pattern of combining Angular with Bootstrap.  Angular extends html with directives and expressions. A lot of directives look like html attributes, such as ng-app or ng-controller.  With bootstrap, I have to figure out what classes I need to make the DOM look a particular way.&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Sep 2015 00:00:00 -0700</pubDate>
        <link>http://nathan-j-brenner.github.io//distractions</link>
        <guid isPermaLink="true">http://nathan-j-brenner.github.io//distractions</guid>
        
        
      </item>
    
      <item>
        <title>The Flatlanders have a store...</title>
        <description>&lt;p&gt;A few weeks ago, I started exploring Angular. Angular is a model-view-controller.  I had worked with Backbone.js, which is another mvc.  &lt;/p&gt;

&lt;p&gt;I started with the Treehouse course, then worked through the tutorial on codecademy.&lt;/p&gt;

&lt;p&gt;The treehouse course gave some interesting definitions, but there seemed to be several gaps.  I’ve heard that Treehouse is working on a new course to replace this older version.&lt;/p&gt;

&lt;p&gt;CodeCademy course was helpful because there was a lot of practical coding exercises.  I would like to see more specific feedback when I wrote errors.  Currently, there are forums where users post questions when they get stuck.  This lends to spending a lot of time looking at my code and other peoples code to debug the error.&lt;/p&gt;

&lt;p&gt;Finally, I got to the code school tutorial and I’m pretty sure I’m going to have that song stuck in my head for a while.  At this point, I haven’t retained anything specific from the treehouse course, but it served as a foundation. Code School is equally valuable as codecademy, and their pedagogic sense is a little different.&lt;/p&gt;

&lt;p&gt;Code School has more courses on Angular, and their first course is free because Google paid for it.  About this time, I dove into a small project.  The WeatherForecastApp repo on gitHub is the result.  It still needs some work and cleaning up.  I’ve been looking at the tutorial on the angularjs.org, with the hope of filling in gaps.  I’ve also integrated angular into the portfolio page on this site.  &lt;/p&gt;

&lt;p&gt;So what makes Angular different from Backbone? Backbone doesn’t have a controller.  If you’re familiar with classical inheritance, the jump is easier to write in Backbone.  The model contains the data, and the view displays the data and can have events, which act like controllers.  This is all written in javaScript files.  Another key difference is that Backbone doesn’t have a strong opinion on how you create your app.  It’s suitable to work with underscore.js and jQuery, and you can get away with a lot of different approaches to problems.&lt;/p&gt;

&lt;p&gt;Angular is a little more opinionated, and it turns html into something quite different.  Angular uses directives to extend javaScript into expressions in the html.  A couple examples of directives would be ng-app, ng-controller, and ng-model.  A controller has to be specified to access the data from the model.   Angular has two-way data binding, so if data appears on the DOM and there is an input tag, the input tag can change the data by specifying ng-model. &lt;/p&gt;

&lt;p&gt;Angular 2.0 is around the corner, and there seems to be a lot of hesitation about it.  React seems to be picking up steem.  It will be interesting to see what happens in the next year.&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Sep 2015 00:00:00 -0700</pubDate>
        <link>http://nathan-j-brenner.github.io//flatlanders</link>
        <guid isPermaLink="true">http://nathan-j-brenner.github.io//flatlanders</guid>
        
        
      </item>
    
      <item>
        <title>PDX TechCrawl 2015</title>
        <description>&lt;p&gt;This was the fourth annual event of this type, and I was really impressed with it.  This event maxed out on it’s reservation space, which was a mere 1,129 people, and I’m sure there were more that ended up showing up for the kick-off.&lt;/p&gt;

&lt;p&gt;A tech crawl is the tech spin off of a beer crawl.  Instead of walking to a bunch of different microbreweries in one sprint, tech companies on the east side of the Willamette River opened their doors for visitors. As this event has grown in participants each year, there were two possible tracks for people to take: A track specific to companies that are agencies, whereby they create and sell their services and products for other companies, and companies that build and sell their own products.&lt;/p&gt;

&lt;p&gt;While I was at Porland Code School for JavaScript Immersion, I had a few field trips of tours of some of the tech companies in the area.  This event went well beyond that experience.  Instead of the focus on just seeing what an office and work space looks like and being able to talk to say one representative of the company, this event was more about connecting with some of the people in these companies and being able to meet other developers from other companies.&lt;/p&gt;

&lt;p&gt;Sometimes there are meetups that I go to and I find a huge gap between the amazing developers out there, who are often leeding discussions and presentations, and then students from code schools that have a limited scope on the field.  At this event, I found myself talking to a lot of developers, especially from the front-end.&lt;/p&gt;

&lt;p&gt;A challenge with events like this for me is that I haven’t found my group to gravitate toward.  I wandered between groups looking for conversations.  I think I ran into two familar faces, and surprisingly no one from Portland Code School.  I have to really let myself go where I want to go and have conversations with people beyond “Hey, you hardly know me, but you should let me play with your code”.  Sometimes the conversations start there with the basic question “What do you do?”, and I was surprised a few times when the conversation would move to “We’re actually looking too”, followed by “What have you done?”.  &lt;/p&gt;

&lt;p&gt;I had several of those conversations last night and I’m looking forward to connecting with some of those people, but there were also several conversations about things outside of tech.  I think for me, it always starts with the art.  What drives you to do something? What are you passionate about?  What drives you crazy?  I love that internal feeling of working on something that drives you crazy (in a good way), and I love talking and working with people that can speak   It’s really incredible how many retired teachers and musicians I’ve met that turned to technology to find what I’m experiencing, which is the ability to be an artist in a different area than where you thought was the only place you could do that.  The job is just a vehicle to exercise those passions.  The language doesn’t matter so much as is the core ability to communicate.&lt;/p&gt;

</description>
        <pubDate>Thu, 20 Aug 2015 00:00:00 -0700</pubDate>
        <link>http://nathan-j-brenner.github.io//pdx-tech-crawl</link>
        <guid isPermaLink="true">http://nathan-j-brenner.github.io//pdx-tech-crawl</guid>
        
        
      </item>
    
      <item>
        <title>Learning to code</title>
        <description>&lt;p&gt;How did I learn to code? That’s probably not so much as important as how should you go about learning to code, but maybe my experience can give you some directions or it can give you an indication on what I know and how I think.&lt;/p&gt;

&lt;p&gt;I had prior experience with Khan Academy.  I used their app to refresh myself on public education mathamatics.  I didn’t spend very much time there because I got the feeling like the audience was targeted to children.&lt;/p&gt;

&lt;p&gt;I found Portland Code School, and they had a partnership with Treehouse.  Treehouse is an incredible resource, and from what I’ve seen in other online education platform, treehouse does much more than anything I’ve seen before.  Treehouse has courses on an incredible range of topics across multiple languages.  I’ve focused on html, css, and javaScript but I’ve completed some courses in php, python, design, development tools, business, wordPress, java, and digital literacy.  I haven’t touched Ruby, Android, and iOS yet.&lt;/p&gt;

&lt;p&gt;Each course has subtopics, which make up badges that you can earn.  Within a badge, there are a series of videos and assessments.  Watching a video earns a user one point, completing an assessment (like a quiz or code challenge) earns you more points, and completing a badge and later a course earns you more points.  As of this post, I’m at 24,640 points, which seems like a lot but it’s just an indication really of how eager I am to learn.&lt;/p&gt;

&lt;p&gt;Treehouse also has tracks, which group a series of courses between sometimes one language to mulitple langauges.  For example, the front end web development track has courses on html, css, and javaScript.  Often the tracks overlap a little bit, so completing additional tracks becomes less work due to the work previously completed.  For example, the Full Stack JavaScript track had a lot of duplicate courses in their front end javascript track.  When I had completed a couple of tracks, I queried the remaining courses in languages like html, css, and javaScript and I complete those as I come to them or when new courses are added, in the case with the Gulp.js. Also, the tracks do an incredible job at scaffolding my learning curve.  The sequence is great because each course builds on previous courses.  &lt;/p&gt;

&lt;p&gt;But treehouse is not a one stop solution to learning every thing you need to learn to code.  As engaging the videos are and how well the courses are scaffolded, and even with code challenges, there’s still a gap that online learning cannot fill, and there’s gaps in learning.&lt;/p&gt;

&lt;p&gt;As far as getting a more complete understanding on some topics, I’ve spent time on other free education sites like codecademy.  They’ve got a Commandline course in the works and it’s meshing really well with what I can already do in the terminal. Code wars is another interactive site, but I’ve had a hard time getting into it because I find it easy to get stuck without any support. But code wars really pushes me on javascript fundamentals.  NodeSchool.io has also a bunch of tutorials that run through the terminal, and I’m hoping to get into that more since I’m done with PCS.  That resource can be pretty challenging.  &lt;/p&gt;

&lt;p&gt;Beyond interactive sites, really the place I find myself dug into the most is in the documentation, which can be challenging because it comes down to how well the documentation is written and what experience the author intends the reader to have. A spectrum would span between jQuery (which I think is really easy to read) and nodejs.org (which I find difficult to read).  Intially, I also looked at w3schools but eventually switched to mdn.  These sites have core concepts with definitions and usually multiple examples for different cases.&lt;/p&gt;

&lt;p&gt;Even with all of these resources, they can only go so far without an oppertunity to be creative (where you have a goal to work towards) and an oppertunity to work with someone else. I’ve found that when I’ve pair programmed, in either role I learn a lot.  I suppose I would rather be the person that’s not stuck: I often feel like the other person that’s trying to help takes a while to figure out where I’m at, which is a lot of work.  That helper has to really figure out what and how you’re thinking to make a suggestion that the stuck person is looking for.  &lt;/p&gt;

&lt;p&gt;By and large, code bootcamps like Portland Code School provided the oppertunity to get that realistic exposure to working on projects.  I can’t imagine learning the full stack without their help, but I think they could do more in the role of recruiter if they continue to sell themselves to clients as a vehicle to get into a job in tech.  Often what makes pedagogical sense often conflicts with the realities of what the industry is like.  A good example of this is how students come out of college and how they stuggle when they get a job.  That in turn reinforces employers a bias that learning in a school is not equivelent to the actual experience of having a job.  The flipped classroom is supposed to ignore some of that pedagogy a little so that students do the job as they are learning, but that means the students have to experience a lot of failure and makes the teacher feel useless.&lt;/p&gt;

&lt;p&gt;At this point, I’ve wandering on sites like treehouse and codecademy along with meeting people in the tech industry with the hopes to find a place to work on a team on some new projects.  My wife just gave birth to our first child, so I’m trying to spend time at home and I’ve got to complete 2 more weeks of orders in a couple weeks from now.  When that’s done, I really hope I’ve got some projects that can also bring in some income.&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://nathan-j-brenner.github.io//learning</link>
        <guid isPermaLink="true">http://nathan-j-brenner.github.io//learning</guid>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll</title>
        <description>&lt;p&gt;This story, like others to come, started with a treehouse badge.  Actually, it started a few months ago when a guy I was working with was complaining about Jekyll.  Somewhere after that, I built a static-site generator and I saw how easy it was to post blogs…if you’re comfortable typing in a text-editor.  I’ve been coding since November 2014, so I’m more confortable with a text-editor than a word processor.  I’ve tried Atom and Brackets, but I started with Sublime so it never seems worth the learning curve.&lt;/p&gt;

&lt;p&gt;Treehouse came out with a course on Jekyll.  As I was learning about Jekyll, I had a client in mind.  Their site was slow and unresponsive, and it was a wordpress site.  Lots of pages, lots of difficult to read text and small pictures.  A possible solution seemed like a static site generator so that they could have more control over their content without depending on finding the right wordpress plugin.  I’ve got nothing against wordpress, I just came from the school of thought that thinks JavaScript can do everything and more than what php does.&lt;/p&gt;

&lt;p&gt;So this is the crud beginnings of my updated portfolio site.  I created a similar site with Foundation back in April, but enough has changed in how I think about programming that I didn’t want to fight that site any more.  It was an oppertunity to learn Foundation, and it was really helpful when I used Foundation on my SnapOR site.  Anyway, this site is live and there’s not much to it but at least it loads faster than the other site and it has my programming projects in the prospective of a historical context.  All that means is the first project is the most recent, and each one before that site shows you a glimpse at how I was thinking a few days or months ago. &lt;/p&gt;

</description>
        <pubDate>Thu, 30 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://nathan-j-brenner.github.io//first-post</link>
        <guid isPermaLink="true">http://nathan-j-brenner.github.io//first-post</guid>
        
        
      </item>
    
  </channel>
</rss>
