<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nathan Brenner</title>
    <description>A sample of my work and thoughts</description>
    <link>http://nathanBrenner.github.io//</link>
    <atom:link href="http://nathanBrenner.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 06 Jan 2017 11:51:27 -0800</pubDate>
    <lastBuildDate>Fri, 06 Jan 2017 11:51:27 -0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>2016 Retrospective</title>
        <description>&lt;p&gt;It’s been a while since I’ve written a blog for this site, and as I was putting my son to bed after a long christmas day, I started thinking of a few posts I should write, this being one of them.&lt;/p&gt;

&lt;p&gt;Others to follow: 
- Something about a large overview and opitions on Python and the frameworks I’ve used from the perspective of a node developer
- A introductuion to ngrx store and effects.  More on both of these later.&lt;/p&gt;

&lt;p&gt;For the sake of not offending someone, I’ll be reducing names.  If you want to know who it was, you can ask me or figure it out on my own.  PDX is a small place, and if you piss someone off, be ready for them to get their revenge on you.&lt;/p&gt;

&lt;p&gt;2016 started off not so good for me: My wife had gone back to work, and I had more or less given up on the job hunt.  After months of looking and doing everything I could with no avail, it seemed best to just keep learning and enjoy being a stay-at-home dad.  At that time, my son was 4 months old, and we found a daily rhythm, which at this point is hard to remember, but went something like this: He’d sit in some rocker while I ate breakfast (after I gave him a bottle), I’d play guitar for him for a while, probably give him another bottle, he’d take a nap, I’d work on something (probably the ionic 1 app), he’d wake up like 3 hours later, we’d do nothing together for the rest of the day, I’d probably do some stuff around the house and maybe make dinner, and Olivia would come home to put him to bed.&lt;/p&gt;

&lt;p&gt;There was some trigger in December that got me motivated to start looking again, and sometime in January, G posted on the pdx startup slack board job-board channel that he needed a junior to medium dev to do html email templates.  I responded something to the effect that I was definately capable.  A phone conversation followed, along with me digging into the best google search had for documentation on writing html email templates, then an interview that was cancelled on the day, but finally an interview.&lt;/p&gt;

&lt;p&gt;This was a kinda crazy interview: It was a huge panel, but I picked up who I needed to talk to and who I needed to ignore: Mostly K, who I actually recognized from the code school.  At that time, she didn’t leave herself with a very good impression, but I knew that if I wanted to make it in this industry, I’d have to make it work with people even if they weren’t ideal to work with. Between her and G, they gave the impression that they valued my studies from the code school, and moved to make it work with me as a contractor.  Emails wans’t something I really wanted to do and there was a lot of bad reviews on this particular company, but I needed production experience. I figured I’d do the best I could and when it came time to leave, I’d be able to find work easier than before.&lt;/p&gt;

&lt;p&gt;Debugging issues on email templates was hard but I enjoyed the challenge.  I got to know some of the querks between the different browsers, and often became frustrated with qa even though they made my work better. There were some challenging personalities to work with, and some really great, and I’d say in general, I really liked the people I worked with, I was diplomatic where there were differences in opinions, and I was professional.  When I didn’t have an email to work on, I studied node with node school, and my manager got me involved on maintaining an in house project.  It was an angular 1 app with php, and frankly it was written poorly but worked.  I had the time to refactor it so the php was used approapriately and the angular pieces were more module and easier to maintain.  I think I took a huge single file angular 1 controller and broke it into roughly 5 controllers with their own view, added in form validation, and stripped out all of the php from the templates. Lesson learned: If you’re going to use an opinionated js framework like Angular, let Angular do the work for you. Don’t use a server side language like php to do stuff the front-end should be doing. Second, spa’s only need a lightweight rest api.  The js does the heavy lifting.   Sure, have form validation in both places, but don’t use templating syntax for the server side stuff where html and javascript is sufficient.&lt;/p&gt;

&lt;p&gt;Another project I took on was a ui library for email templates.  In the emails I worked on, there was a lot of duplicate code, and when I reused pieces that had been used on previous emails, the email would go through qa a lot faster because there would be fewer bugs.  There was at the time some css framework that had something like this, but it wasn’t a perfect solution, so I took the initiative with the support of my manager to start saving these component based css pieces of html with inline css into a directory.  This process led me to not only reuse these components, but to also refactor and improve the code I had previously written.  There was a point where I stopped doing all the css inline to using a separate css file, and using a build tool to move the css to inline within the template.  There’s tools that do this, and what I had invisioned was a cli tool where a developer could write an email with current html css standards, run a command on the cli to build it, and the css would be implemented into the email template such that you could write with &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt;’s and they would be convered to &lt;code class=&quot;highlighter-rouge&quot;&gt;table&lt;/code&gt; tags.&lt;/p&gt;

&lt;p&gt;Unfortunately, I never got that far with the project.  My contract was ended in May, after 4 months.  A lot of the work I had been doing on emails had been moved to a cheeper solution overseas and I left in what I considered good terms.  I requested K to provide me with a recommendation on LinkedIn that was never provided, but all of the people I worked directly with were willing and were very helpful at getting me the next gig.&lt;/p&gt;

&lt;p&gt;Before the html email gig, I had another conversation that started from something on pdx startup slack.  It turned into a lengthy phone conversation, where my son was chillin in his rocker peacefully for the over an hour conversation that seemed mostly cultural.  The guy came across like he cared, I told him I can produce but I lack experience, and he said he’d send me something to work on to see where I was at.  Well, he never did, but jump to June, and my old manager, G, is doing some work for him and his wife is working for him.  Well, I reached out to this guy again, time went by, and I was actually getting some serious looking leads.  I interviewed at Daimler and was really excited about it. It was for a front-end team, Angular 1, and there was a question about documentation.  I said something like “The code should speak for itself”, which wasn’t the right answer for this group.&lt;/p&gt;

&lt;p&gt;I’ve thought a lot about that question since then: If you’re using an opinionated framework like Angular, you’ll be limited on how you do things, so for someone new to come in and maintain something, if they don’t know they framework, they need to read up on the framework.  Inline comments eat up space, and like I said in the interview, I compaired it to reading music: I’ve had to read music where there were circles around everytime a note was flat or sharp as defined by the key signature.  If you read the key signature and was diciplined to stay in that key, then those circles are distracting you from everything else that’s going on like paying attention to the conductor and reading what the composer wants you to read.  You don’t need to add a ton of stuff.  That’s not to say I never added stuff in, but when I did, it was very intentional.&lt;/p&gt;

&lt;p&gt;Now with specific to coding, there are additional tools that solve this problem: Unit tests and for angular then you have Typescript.  I like them both, and still add in-line comments.  I’m weak on unit tests, but from every project I’ve worked on, I’ve used a tdd method.  I just don’t have the tests written.  So I’ll write a feature where I know what should happen, run the app, check the browser, and change course as needed.  Writing automated tests would be much better, but with the time I had, that’s what I was able to do and still deliver on time.  Clients don’t care about unit tests, and the saying goes if you know how to write them, then you’ll develop features much faster.  As far as typescript, I’m not the best at it, but it’s helped me in a lot of places later on, which I’ll go into.&lt;/p&gt;

&lt;p&gt;So I answered a question in the way they didn’t like, and that kept me from getting that gig.  Lesson learned: For some devs (and this is because I worked with people that shared my opinion), inline documentation is probably a best practice, but again should be deliberate and conscise.&lt;/p&gt;

&lt;p&gt;Regardless to that gig, shortly after, that guy I had talked to before the last gig reached out: He had an employee that wasn’t producing.  We went out for a beer, and it was my favorite type of interview as of yet: It was a conversation.  We talked about several things like my service with the military and culture related concerns but the job was mine. His guy wasn’t producing and his guy didn’t need the gig. The concern was with the client, like if they’d be ok with making the change.  He said this client has years of work for them, and he said a lot of what sounded like good things about the culture of the company: His background was a dev, the team was small and worked remotely but had an office at WeWork in Portland, the pay would be up to current standards, and everyone works hard together.  It was a python/angular consultant type shop and I’d have the oppertunity to do some stuff in python so if/when I picked up on python I could use it to make it stick.&lt;/p&gt;

&lt;p&gt;Now, not sure if I would do this again: He told me he would meet with the client the next day and if the client was good with the change, then he’d hire me.  I knew he’d drive back to where he lived so I figured if he had good news for me, he’d let me know before he hit the road. Noon came and went, I was disappointed, and sent him a message that evening that sounded like “It must have not worked out, what a shame, good luck, maybe we can make it work later on”.  I had several leads, and it’s a gig economy.  Well, turns out he was looking at his book and he gave me the gig.  He put me on contract for less than I was doing at the email gig, but I was ok with it because it was on work that I wanted to do and the culture sounded like a good fit.&lt;/p&gt;

&lt;p&gt;Onboarding was brief.  I jumped in and contributed/closed github issues and within a week, the client was telling the owner how happy he was with me. Things seemed to be looking good, I was moved to salary which came with a small pay increase.  I asked for my contract to be updated and I trusted my boss to do his job, but I never saw that contract update but things seemed to be going well so I didn’t want to rock the boad.&lt;/p&gt;

&lt;p&gt;After working wiht the email gig, where it was an agency type environment, I was starting to itch to work in a SaaS environment where the quality of the code mattered more to the enduser than burn and churn.  A client has 3 things: time, money, and quality.  Pick 2.  Most of the time, it’s time and money.  Quality is subjective, and you’re devs should be able to write good code fast.&lt;/p&gt;

&lt;p&gt;Another thing about working with clients: If they were great to work with, they wouldn’t need you.  They’re going to be weird, they’re going to be difficult, because if they weren’t then they wouldn’t need you.  Apply that to any one that needs you and compensates you with a paycheck.  They’re not your friend, even if they want you to think they’re a nice guy. I hate it, but I have been burned too much to not completely believe this.  Give me a job, let me stay there for over a year, have my back when I need it, and you’ll be an exception to the rule.  Sorry, I got this with working in education, the military, and tech is no different.&lt;/p&gt;

&lt;p&gt;So this particular client started getting weird, and me and another guy were no longer needed.  I was doing angular 1 work for them on this aweful project, but it was the first big angular spa I had worked on so I got a lot of great experience.&lt;/p&gt;

&lt;p&gt;After that project, my boss told me to build the ui on an inhouse app.  He gave me some ideas about what it was, and gave me the impression that I could use it as an oppertunity to learn how to use angular 2, which had just been officially 2.0.0 released.&lt;/p&gt;

&lt;p&gt;I barely got into user auth with registration and login before I was put onto another client.  Paint this picture: I had 8 weeks to build this app.  I was responsible for the front-end, and there was another guy on the backend.  So I started with creating the project with the angular cli (like I had with the previous project) and started getting it up to speed with the inhouse project then hit a wall. For 1, I got a bunch of feedback from the client, like a 55ish page Word document describing the features in no particular order. Along with some guidance from my boss, like I should send a weekly status report for the first 4 weeks, then move onto direct meetings.  There was a face to face online meeting where the client basically met the devs, and there was a third guy in the mix that would just be the guy to fill in the gaps.&lt;/p&gt;

&lt;p&gt;Throughout the project, the backend guy was dependant on what I wanted to do.  He wasn’t leading.  He was a senior dev of much more years of experience than I had.  That third guy was involved in additional projects, and frankly was able to give some helpful feedback but very little in contributing to code.  So this was the issue: This thing needed to be done, and I was going to deliver it on time above expectations.  Could I come through? I would get that question, and I would want to give an explaintion detailing the situation, but the people writing my paychecks just wanted a “yes” or “no” answer.  What happened to the support that you sold me on to work here?&lt;/p&gt;

&lt;p&gt;The backend dev was great.  He was juggling other projects, he didn’t take the lead, but he wrote a great api and helped me when I needed.  Toward the end, he also added some front end stuff that I was running out of time with.  But to be clear, me, with less than a year of day to day professional software development was the lead developer on this project and was using tools that no one in this company could help me with.  Had I not delivered, then yes I should have gone with something else but that wasn’t the case.  Again, I repeate, I delivered on time above the expection of the client.&lt;/p&gt;

&lt;p&gt;So what does “done” mean?  Does it mean you hit a date and you stop working on it? Does it mean the software was perfect from the developer standpoint? Like a full set of tests are written, it can’t break anywhere, and needs no future maintanance? If that’s what you want, then you give up time or money and that’s on the person that created/negotiate the contract.  No one on my team gave me a definition of what “done” meant.  No one told me what the date was when this contract ended until I pushed them for it after the 7th week. What “done” meant to me was that the features the client wanted was existing by the end of the 8th week.&lt;/p&gt;

&lt;p&gt;So to take a break from this storm, there were some great things I learned, and a lot of it was from React.  It kinda comes down to rxjs: maintaining state and creating reusable components.  I was using typescript, angular 2, bootstrap 4, and a host of third party vendor components because I was strapped on time.  I picked up on some patterns that have blown my mind, and I’ll be giving a presentation on ngrx at the January PDX Angular meetup.&lt;/p&gt;

&lt;p&gt;All during this process, I created the map on which features to work on. I created github issues for each week.  I set up the continous integration, and the github integration on slack.  I drafted weekly status reports to the client.  Midway throught the process another person in the company was added to be the person to handle the client.  Not sure what that person actually did aside from cater to the clients needs and give them those answers like “Yes, it will be done on time” with no level of detail on what “done” means.  I love having people that will do that job, but if I’m involved in that process at all, transparency means a lot to me.  And at the end of week 8, I was the one that demoed the app to the client.  My boss and the backend dev were on the call, but it was me, the junior dev, demonstrating what the app could do, what their money got them.  It was the mvp.  The client said he was happy with it.&lt;/p&gt;

&lt;p&gt;After that meeting, I took care of some other issues in my life and didn’t look at my computer for that weekend. Prior to that, I was stressed out about getting features done each week, I was working weekends, I was putting this job ahead of my family.  This was not the culture this guy had told me about.  I asked for help, and when I got responses, they were like “I’ll try if I have time later” or “Maybe we should dump everything we have as we’re halfway through the project and use another javascript framework”.  There were bugs, because I was burn and churning, so I got back to work on Monday, and the client provided another Microsoft Word document with a list of things that should be addressed in no particular order but he did provide essentially labels that could be summed up to “must be done” “post mpv”, and “requires conversation”.  Well most were “must be done”.  Some were fairly easy, some not so much, and I very much enjoyed fixing those issues.&lt;/p&gt;

&lt;p&gt;This was around Thanksgiving.  This company claimed for “unlimited paid time off”, and this was the test. I was going out of town for a couple days to visit family.  I had worked well more than what this client was paying for with weekends and days that were over 10 hours regularly.  There were also days where it came time for me to go pick up my son from day care and I was in the middle of a feature with a bug, and I couldn’t get back to that bug until later. Often this might mean waking up at 3 am unable to sleep because I had worked through the problem in my head and couldn’t think of anything else to be able to go back to sleep so I would go work, and that 10 hour day would turn into longer.  No time for being healthy like really even eating lunch or going to the gym.  I was working my ass off on this app, I had something to prove.  I would deliver on time above expectations.&lt;/p&gt;

&lt;p&gt;So the question came up: Is the app going to be ready by the first of December (which appearently is when the client was no longer paying for this company to do the work).  Not something I wanted to answer in one word response, I was stressed out, and I didn’t need these conversations or to lie and set false expectations.  I would not say the app would be ready because there were issues that I did not know the time they would take to complete.  So I may have pissed off the person that was handling the client because I refused to cater to her single response answer, but I maintained control of development and I was transparent about what would need to be done. I said I’d be out of town, and would probably work more that I would like to.  The rest of the team, how convenient, said they’d be working through the holiday.&lt;/p&gt;

&lt;p&gt;So yes, I worked a few hours on Thanksgiving and the days around it.  I knocked out the majority of the work well ahead of what I was fearing would take. December 1 came and I sent in my last github commit believing the app was delivered on time ahead of expectations of the client.&lt;/p&gt;

&lt;p&gt;My boss, near that midnight point of the development, told me to go back to working on the in house app.  Sometime around that, he also propted a conversation with the team members about a retrospective, and in private he did the same thing.  To be clear, I asked for feadback.  During the development, in the couple of times he asked about the app, I asked for feedback and in those cases he said he didn’t really know because he hadn’t paid any attention to it.  2 weeks later he called me on a morning where I was close to finishing the app after requesting for feedback on what the api models meant, and he fired me.  It was an issue of culture.  There were things that had taken me longer than they should have.  With the needs of his company, they need someone more senior level.&lt;/p&gt;

&lt;p&gt;Some interesting things about this.  First, let’s get the elephant out of the room.  The person that was handling the client was a friend.  Our families socialized outside of work.  She sarcastically insulted me about things like being boring because I wanted to talk to her about tech (coding) and about playing the clarinet in the military and I sarcastically insulted her about not being a develper, about being a saleman, and being canadian.  No harm no foul.  But she took something I said and lashed out out of the blue privately.  I immediately appologized, and I told this person how I would expect them to figure out how to get me fired from my job. Did that happen? I don’t know. Is it possible? Absolutely.  Was I wrong? Absolutely.  I should have never opened up to the people I work with and to never be sarcastic with them, particularlly online when the context is more vague.  Is it possible this person could keep me from getting a job in tech in Portland ever again? Absolutely.  Regardless, I recommend people to her and to use this company and act professionally about this company.  This will be the only place I publically mention this mostly because I doubt anyone will read this.&lt;/p&gt;

&lt;p&gt;Second, this employer had shared some opinions in the past about what a senior developer is.  Like “What makes a developer a senior?”, as in that lable doesn’t mean anything.  I never really had a junior dev position where I could relax and rely on mentors to baby me through.  I’m actually in the middle of a project where I am mentoring someone. I’m very transparent, and using a lot of what I carry from being a teacher to help this person and this person is helping me on a project.  What I consider a senior developer now is based off of what I did on that project where this guy said I took longer than it should have. I never aggreed to be a project manager, even though I kinda liked those responsibilities, where I was directly communicating with the client, mapping out the big picture, and scaffolding features particuarlly that I had never written before.  Yes, managing state should not have taken me so long to figure out…but that had never been something I had done before. Using a framework that is a rewritten version with bagage from the previous framework…and not having any direct help…That’s a problem a senior handles. And I never said I was a senior dev when I pursued this job.&lt;/p&gt;

&lt;p&gt;So the culture definately shifted.  I’ve got a ton of experience now from that project, and frankly from a year ago I have an incredible depth of experience.  I see a lot of jobs that say they want a senior dev with 5 years experience.  I also hear things like it only matters what you’ve done in the last 2 years.  Well, I’ve been writing code every day for the last 2 yaers.  I taught a lot of people how to write code, like at the code school, I’ve mentored friends that have been struggling to get jobs, I’ve taught myself a lot of design patterns and languages, and I’ve figured out how to be successful in both a corporate type role and in a start up type role.  Coming into 2017, I’m confident I’ll find a gig within the last month.  I have a lot to offer. I don’t know very many people with the resilency and work ethic that I have.  I’ve got some friends that are helping me out, and I’ve got some projects in the works.&lt;/p&gt;

&lt;p&gt;Before I turn completely positive, who fires someone right around christmas? I’m finding that I have to lie to my friends and to professonals about the conditions on the end of my employment because A. It makes me look like I did something really bad or B. It makes them look aweful.  It was a frustrating gig, but I really like the people that I worked with, and I really wanted to stay there for a lot longer.  They’re publically looking for another developer to handle a python django project that I feel like I could have and should be on.  They sold me on culture, I bought into it, I asked for transparency and accepted when it wasn’t given even when I was very transparent. Of the django devs I know that are local, I’m telling them about this gig and that they should reach out.  My family sent that person who I was friends with a christmas card.  I’ve forgiven them, and at the same time I don’t know how to understand why they have decided to wrong me so.  It just reminds me that it’s a gig economy: I saw the writing on the wall. The culture was shifting, I should have been looking for a job for a while and maybe left them with that project halfway done because they could have done what they did.  I’m not even sure if I could do that to someone.&lt;/p&gt;

&lt;p&gt;If you’ve read this far, and you’re thinking to employ me, you’re probably thinking I have a lot of baggage, and if that’s the case, that you’re unwilling to look at the whole picture, then I probably don’t want to work for you.  I don’t need you. You need me, to fix a problem you don’t want to solve.&lt;/p&gt;

&lt;p&gt;My lesson learned: Be friendly but not friends with the people you work with that can get you hired or fired.&lt;/p&gt;

&lt;p&gt;With that, I’m working on some things: I’ll be giving a presentation on ngrx at the January PDX Angular meetup.  I was inspired by a presentation at the typescript meetup where the presentation got into using ngrx in nativescript.  It hit me at a good time, and it was a very stiff learning curve.  It’s my intent to build a presentation that isn’t so stiff.&lt;/p&gt;

&lt;p&gt;Ngrx is Redux with RxJS or Observables, and it empowers you to write Angular 2 applicatons in a React like style.  You can write Angular 2 with the patterns of Angular 1, but honestly it’s a lot better to use the reactive patterns, and in my honest opinion better than writing React. I’ve been looking at React and I’m not convinced, but if you want to pay me to write React, I’d be happy and excited.&lt;/p&gt;

&lt;p&gt;So I’m going to code along with this presentation, which can be hard to pull off but I think I’ve got it figured out: Have a script, use a small but relevant example that shows the full power of Ngrx, and that example should be somehting you’ve already used several times. So I’m going to demo how to create a user registraton/login/logout with ngrx store and effects.  Some of the patterns I’ve picked up may not be 100% with what ngrx is about, but it’s worked for me and I intend to blow some peoples minds in a context that says “I’m not saying this is the only way, but it worked for me and it’s pretty amazing”.  I’ll use the angular cli, typescript, es6.  I’ll briefly explain things that I don’t intend to give much attention to like what “switchmap” operator in ngrx is, or what the &lt;code class=&quot;highlighter-rouge&quot;&gt;@Output&lt;/code&gt; decorator means.  I’ll show a pattern that works.  Maybe the lack of specificity and script will make me look more senior, but I feel senior for angular 2.  I want to be the idiot in the room, but I’m not convinced that there are very many people in pdx that understand angular 2 in this depth like I do.&lt;/p&gt;

&lt;p&gt;So I needed a really simple api for this, because effects is often ignored when presentations on ngrx store are given and I want to show the full power of it.  I originally intended to let someone on my previous team to write one for me, then I thought about using what they had and that felt immoral and unethical.  I’ve been wanting to learn Flask, so that’s what I’ve been doing. Coincidentally, I found a juniorish dev out of the bay area that’s willing to learn more about rxjs and she’s doing to the front-end.&lt;/p&gt;

&lt;p&gt;Honestly, I have a larger app in mind: Each christmas with my wife’s family, we do a secret santa thing for the adults. She has several siblings with their own spouse, so grandma assigns everyone a secret santa, and everyone provides lists, and mostly the women do the shopping (yes, I got my wife a gift and I ordered things that my person wanted from their list…but I do not do gift cards).  Well, grandma get’s a bunch of people’s names on slips of papers on a bucket and draws them out, and often has to redo them a bunch because spouses can’t have spouses.  And this sounds too perfect for an app.  On the way home last year, I glanced on the apple app store, and yes, there’s already these apps.  So if grandma could be convinced to use one and everyone else to buy in, it’d have to be something I made just for them, and it would make a solid full stack app for my portofolio.  After working on this crud app, a lot of the patterns are the same, and I see possibilities for additional features, like wouldn’t it be nice if a user could add items to their list and only their secret santa could see those items? How about adding messaging? Upload files like excel spreadsheet lists?  So there’s features that could be built, but then why not also make this a mobile app with Ionic or Typescript? There’s a lot of possibilities, but it all comes down to how much time I have, like how long can I stay unemployed.&lt;/p&gt;

&lt;p&gt;A couple days ago, another dev said they wanted to learn more about rxjs and was looking for help on a project. Well, I’m not an rxjs expert, but I’m fairly comfortable with it. A conversation started, and I’ve got a junior that’s willing to work on the front end of this app and is willing to be open to my feedback. I’m writing the backend api, which is challenging but definately needed for my portfolio.  It seems to be coming together well.  Right now I have working endpoints for user registration and login, along with a get request to view all users. For now, it’s a very generic “login/register/logout” api that I’d like to split off to be by itself for reuse. I’ve been itching to bust out the front end, as it’s the holidays and people aren’t working (as they shouldn’t, but should be getting paid).  The front-end is coming along, I just created a separate slack channel with github integration so I can get pinged when this dev sends a pr.&lt;/p&gt;

&lt;p&gt;That’s kinda it.  I also just got out of the army.  I ended my 6 years of service honerably even though I wanted to be out for about the last 3 years.  My son is very cute and makes me smile and laugh all the time.  Our furnace recently went out…coincidentally the day after the fireplaces were serviced, so we have a cord of wood outside and the house actually feels warm.  My parents are a year away from retiring, and I don’t know what they’ll do when that happens. I guess I’m betting they might just travel around in their rv until they get sick of it.  Hopefully they stay busy and are less negative. My sister seems to be doing well but the less I know the better.  Katie is getting near the end of her life due to the canser.  Christmas is never the same since my grandparents died and I kinda miss being home for christmas even though it feels like being in Reno with Olivia’s mom is the right thing to do.&lt;/p&gt;

&lt;p&gt;I guess all I can hope for 2017 is that it goes as well as 2016.  I’m not as depressed about looking for work. My wife’s job is going well, her schedule is about to change so she works monday, tuesday, wednesday, Saturday.  I’ve got a 2 month vanilla js gig that I might find out I’ll get tomorrow or Tuesday.  It’d be great to get good enough at js from not having a framework to use and it’d be great to get back into a job when it’s so hard this time of year, but the pay is low and the commute is bad.  I hope the friends I have now stay friends and I gain some more.  It’d be really nice if we can pay off as much debt as we did this year.  I’m really excited to not have a 2 week army tour to do, and I’m a week into growing a beard. It was a good thing to serve in the military, but I should have never done it.  The economy seems to be doing well, and my house may be cleaner since my wife got me one of those robot vacumn cleaners.&lt;/p&gt;

&lt;p&gt;Oh and I need to revampt this site.  I’ve been thinking about going with something as easy as a wordpress theme that looks more thought-out and just show off a couple projects, like secretSanta.  Not sure if I’ll keep the blogging. So I did the remote thing for 6 months, and the crazy paced startup for the last few months.  Lets see me with a coorporate gig that’s consistent and maybe even some people I don’t like but make it work for a good solid long time…like it would be great to have a job for a solid 12 months.  With all I learned in 2016, from writing es5, es6, python, php, lots of css and some sass, where will I be for 2018?&lt;/p&gt;
</description>
        <pubDate>Sun, 25 Dec 2016 00:00:00 -0800</pubDate>
        <link>http://nathanBrenner.github.io//2016-retrospective</link>
        <guid isPermaLink="true">http://nathanBrenner.github.io//2016-retrospective</guid>
        
        
      </item>
    
      <item>
        <title>Webpacking Simple Angular 1 apps</title>
        <description>&lt;p&gt;I’ve got a few front-end angular applications on my portfolio, and I’m ready to add on to them.  Originally, my portfolio was intended to show as a historical view point from where I started writing to where I was at the end of the Portland Code School Javascript Immersion program.  In the last year, I wanted to change that so there’s only a couple applications that bring out my strengths.  So that was just going to be some full-stack apps, but over time, it’s now involved angular 1.x written cleanly by John Papa’s styleguide, unit tests, webpack, and a backend with express and mongo.&lt;/p&gt;

&lt;p&gt;I had been putting off looking at Webpack and unit tests for a while, and I’m ready to take what I’ve learned and apply them a few times over in some applications.  This is another recipe type blog that can show how to take an existing angular application and add in webpack.&lt;/p&gt;

&lt;p&gt;I have a todo app with the following structure:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	node_modules
	todo
		todo.html
		todo.controller.js
	.gitignore
	app.module.js
	index.html
	package.json
	readme.md
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Index.html currently has a bunch of scripts in it (I didn’t bother with gulp on this case), and there’s a reference to &lt;code class=&quot;highlighter-rouge&quot;&gt;ui-view&lt;/code&gt; because I’m using angular ui-router.  There’s only one state, but this application was built the same way I would expect larger applications would be built.  That’s also why there’s a component type directory (todo) with it’s view and controller.&lt;/p&gt;

&lt;p&gt;Recipe:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;npm install webpack –save-dev –save-exact&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -S angular&lt;/code&gt; along with any other dependancies&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I want to maintain the component type directory structure, so I’m not going to move the js files into a separate app directory.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Comment out the script dependencies in index.html&lt;/li&gt;
  &lt;li&gt;add in: 
&lt;code class=&quot;highlighter-rouge&quot;&gt;html
    &amp;lt;script src=&quot;/scripts/vendor.bundle.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;/scripts/app.bundle.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;touch webpack.config.js&lt;/code&gt; in root of the app
    &lt;ol&gt;
      &lt;li&gt;require webpack and path modules&lt;/li&gt;
      &lt;li&gt;Set &lt;code class=&quot;highlighter-rouge&quot;&gt;var config&lt;/code&gt; to an empty object&lt;/li&gt;
      &lt;li&gt;set &lt;code class=&quot;highlighter-rouge&quot;&gt;config.entry&lt;/code&gt; with two properties: app and vendor.  App should be set to the path to &lt;code class=&quot;highlighter-rouge&quot;&gt;app.module.js&lt;/code&gt;, and vendor should list all of your vendor dependancies, which you installed from npm (in this case, angular, angular-ui-router, angular-animate, ui-boostrap, angular-touch)&lt;/li&gt;
      &lt;li&gt;Set &lt;code class=&quot;highlighter-rouge&quot;&gt;config.output&lt;/code&gt; to property path to &lt;code class=&quot;highlighter-rouge&quot;&gt;__dirname + /scripts&lt;/code&gt; and property filename to &lt;code class=&quot;highlighter-rouge&quot;&gt;app.bundle.js&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Add in this plugin:
 &lt;code class=&quot;highlighter-rouge&quot;&gt;
 plugins: [
 	new webpack.optimize.CommonsChunkPlugin(/* chunkName= */&quot;vendor&quot;, /* filename= */&quot;vendor.bundle.js&quot;)
 	]
&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Then set &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports = config&lt;/code&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;in app.module.js, require angular and the rest of the dependancies (you’ll need to do this with angular for all the app modules)&lt;/li&gt;
  &lt;li&gt;In app.module.js, require all of the modules (controllers, directives, services)&lt;/li&gt;
  &lt;li&gt;type &lt;code class=&quot;highlighter-rouge&quot;&gt;webpack&lt;/code&gt; in the terminal (webpack has to be installed globally with npm)&lt;/li&gt;
  &lt;li&gt;Run webpack in terminal&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This will get you started, and there’s a lot more to webpack than this.&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Jun 2016 00:00:00 -0700</pubDate>
        <link>http://nathanBrenner.github.io//webpacking-ng-apps</link>
        <guid isPermaLink="true">http://nathanBrenner.github.io//webpacking-ng-apps</guid>
        
        
      </item>
    
      <item>
        <title>Ready for another contract</title>
        <description>&lt;h3 id=&quot;original-post&quot;&gt;Original Post&lt;/h3&gt;

&lt;p&gt;My contract was ended about a week ago, on good terms.  I was told they didn’t have enough work to keep me on any longer.  It’s not fun losing a steady paycheck, but I was going in everyday expecting it to happen.  There hadn’t been a lot of email development, and there has been a lot of other contractors that had left, so it was my turn. All in all, it was a really good experience.  It was my first, and certainly not last, gig at writing code everyday, all day, as a developer. I wasn’t doing anything exciting, but it was challenging and I honed in on writing html and css.  When I had some spare time, I was able to contribute to a spa and I ended up completely refactoring the application so I can add credit to my resume as far as app development goes.  I created a smaller version of the app that I’m pretty happy with.  It’s on my portfolio page, multipage-form, and it’s up on gitHub.&lt;/p&gt;

&lt;p&gt;I’m feeling pretty optimistic that I’ll be able to find the next oppertunity without as much stuggle as I did before this contract. The first thing I did last week was contact all the recruiters that I knew and other connections that I had run into, and there’s a few leads out there.  It’d be great if I could be back on the clock in the next week, which is mostly to keep my wife happy.&lt;/p&gt;

&lt;p&gt;This is what I’m looking for: I’m a developer, not a designer, not management, not quality assurance.  I love working with code, the chrome dev tools, and a text editor.  Front-end work that involves Angular or/and backend work that involves node.js. I can build ui layouts from photoshop files, like I did with html emails, or from wireframes with css compilers like Sass and frameworks like Twitter Bootstrap or Angular Material. I’d also welcome the oppertunity to build cross platform apps with Ionic, NativeScript, or Electron. I’d also probably be good with refactoring an Anglar 1.x app over to Angular 2 due to the experience I’ve had with both and TypeScript.  Work with mongoDB would be even better since my skills have greatly improved in that area recently.&lt;/p&gt;

&lt;p&gt;Those are the areas that I can provide the greatest value to an employer. As far as culture, I’m not interested in working with a pc (I had one for the last 3 months.  They’re great in their own ways, but I like working from terminal and I like the touchpad). I’d like to work with a manager that will take the interest in getting to know me and not expect me to be a social butterfly off the bat, and I’ve worked for enough managers that aren’t professional.  I’m not interested in rocking any boats or asking for any degree of changes because I still have dues to pay. I’m fine with working as a contractor for the same reason, but I can’t wait to be a valued permanant member of a team. My wife’s work days don’t have a hard stop time, so I need to be able to pick up my son from daycare. I’m open to working from home and can be just as effective.  I’ve got an office with a window and a Thunderbolt display that can be a little hard to pull me away from.&lt;/p&gt;

&lt;p&gt;I’m definately willing to streach beyond those core areas, and I’d expected to be compensated less and to be supported more.  I’d love it if it were in areas like Angular 2, TypeScript, automated unit testing and other forms of testing. I’m also looking at adding in a module loader like Webpack or JSPM at some point. I’d also welcome working with another mvc like React or Ember.  I’ve heard a lot of support about the Ember community, so that might be worth looking into more, and Portland really seems to be latching on with React over Angular.  I’d like to spend some time with Python or Ruby, but unless I’m getting paid I’m not likely to jump in like I have with Angular or node.js.  I’m less inclined to do CMS work, but I’m sure I’d be successful with it.  I worked with PHP on the angular form, I’ve studied it along with the WordPress Codex.  It feels like I see a lot of job posts looking for experience with Java and asp.net so I’d love it if I could pick up some skills in those areas.&lt;/p&gt;

&lt;p&gt;I’m also feeling a lot more confident.  I’ve proven that I can write code that can go into production. Html emails was a great stepping stone for that, and I had a great project manager that helped me find my footing so I’m more capable of speaking up for what I can do, what I can’t, when I need help, and what’s realistic in a timeframe. I’ve become comfortable with fixing bugs, refactoring existing code, using JIRA to communicate with other steakholders, and tracking versions even if I’m not expected to. I worked iteratively, and I didn’t push breaking changes. I maintained professional relationships with the people I worked for, and I couldn’t even say a negative thing about anyone that I worked with.&lt;/p&gt;

&lt;p&gt;I was also persistent at pushing myself with professional development.  I found some time to work through some of the workshops on node school, so I feel a lot more confident about what I know and what I should study more.  Stream-adventure was great, and I need to run through it again. I also started looking at rest api’s, and I feel a lot closer to being able to add that layer to small projects with a cloud based database, like &lt;a href=&quot;https://mlab.com/&quot;&gt;mLab&lt;/a&gt; and to start using Mongoose more.&lt;/p&gt;

&lt;p&gt;I also got involved with the Mongo University program.  They brought me on as a ta to proof their lectures, and to answer student questions on the forum.  It’s a paid contract, and it’s not very time intensive, so with the gap in full time work has given me the time to study MongoDB a lot more, but I can also make a full time gig work with this thing. I also got a discount on the Mongo Developer Certification Exam, so I’m studying a lot for that right now and hope to add that to my resume soon. From answering student’s questions on the forum, it’s also clear that I can mentor less experienced developers, which I had done before as a instructor at Portland Code School.  I was also teaching one of my coworkers at CMD version control with git, and pointing her to resources on javascript with occational clarifications on some of the weird parts.&lt;/p&gt;

&lt;p&gt;Home life is really good right now.  My wife lost her job a few weeks ago. The situation was a little similar: She had worked at that place for a couple years, and had outgrown the clinic.  It was a great first gig but she was relieved when she was let go because it forced her to open herself to new oppertunities, and she had an easy time finding another employer that recognized her talent.  It feels like we’ve hit a stide with balancing work/finances/family.  That looks different for everyone.  For us, we both like our work, and our work compensates us so that we really enjoy the time off work. Our son is now crawling, and we just put him on the back of my bike.  He’s got 4 teeth, and is starting to eat solids beyond pureed food.  It’s hard to believe he’s close to a year old.&lt;/p&gt;

&lt;h3 id=&quot;update&quot;&gt;Update&lt;/h3&gt;

&lt;p&gt;I started a new job about a month ago, and I feel really lucky to have it.  I’m part of the Mercenary Tech team now and I think this could be a really good fit for a long time.  Mercenary works with small to midsize businesses to help build their applications.  It’s everything I wanted to do and I love the culture.  Before when I was asked questions like what sort of culture would I want to work with, or the sort of boss I’d like to have, my values, and other long term goals, I had a hard time answering because I had been looking for stable work for so long.  I remember the crossroads vividly, but I can only say roughly it was a couple years ago when I dropped pushing the music and education and started searching for something different.  Now I can confidently say I like working on front-end development.  I like working with people that are smarter than me and make me feel like I have to defend my opinions and keep learning new things both relevant to the problems I need to solve for my employer and what intriques me.  Front-end development is really screwed up right now, and there’s some amazing tools out there like Webpack, Typescript, System.js, Gulp, Sass, Mocha.&lt;/p&gt;

&lt;p&gt;So I’m teaching myself Python. I’m back on Treehouse watching videos as a starting point to learning the syntax and eventually get introduced into the frameworks like Django.  I haven’t seen very much backend javascript and mongoDB.  I don’t love design, I’ll tolerate writing css, and I’m not dying to become amazing at css preprocessors (but I know I need to work on that).  I like reactive spas, and I’m working on an angular 1 app so I know my way around it, I’m getting a lot more familiar with the inner parts, and I can’t wait to spend more time with angular 2 with typescript and es6.  I’m working with a remote based team, but I have access to work from a really great office in the Pearl.  Some of the members of the team are different, so I’m pushed out of my comfort zone to the extent that I’m ok with.  Again, I’m really lucky to be on such a talented team, and I think Mercenary is going to become very successful in the near future.  My employer is a learder, not a manager, and previously an engineer.  He comes from a farming family in Eastern Oregin, with a formal education in computer science, and for me I have an easy time to relate to possibly because I share some of his values like integrity, hard work, passion, family, maybe business.&lt;/p&gt;

&lt;p&gt;I’ve also been talking and throwing leads to some friends that are looking for work.  It feels like a lot of luck.  I met my current employer personally on a call when my 5 month old son sleeping in a rocker.  Nothing came out, and ironically he hired the spouse to the guy at another company that I was able to start working for.  That guy got fired, and ended up telling mercenary about me.  Portland is a small town, so it’s hard to get started, and once people have an opinion on you, that’s what you get stuck with, which is good and bad.  The same was the case for education, and when I screwed that up, I burned my bridges.  I hope I don’t have to do that again.&lt;/p&gt;

&lt;p&gt;In summary, I’m part of a development team that does consultant type work.  I expect to be working on similar type projects with varying levels of quality of code, with the expectation to solve the client’s problems with the least amount of code in the most effective ways.  Right now, that’s what I’ve been looking for the last few years. I’m hoping I can become as effective writing Python as I was with node, and that I can get enough experience with this gig so that when I’m ready to move on, I won’t be looking too hard for work.  The reality is that the tech bubble is going to pop soon.  There’s a lot of student devs, juniors, and sloppy intermediate devs that are going to lose their jobs, and they’re not going to have enough credibility to ride it out for the next gig to come along.  It feels like the only way to avoid that filter is to do good work and make yourself valuable to your employer/clients.&lt;/p&gt;

</description>
        <pubDate>Mon, 06 Jun 2016 00:00:00 -0700</pubDate>
        <link>http://nathanBrenner.github.io//looking-for-next-contract</link>
        <guid isPermaLink="true">http://nathanBrenner.github.io//looking-for-next-contract</guid>
        
        
      </item>
    
      <item>
        <title>Recipe for starting MongoD</title>
        <description>&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;A couple posts ago, I made a ‘recipe’ for creating a typescript project with node.js.  I’ve actually used that a few times, and I’ve gotten some feedback from other devs that liked it, so this is another one.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’m a ta for a MongoDB University course with node.js that starts soon.  Part of that means I’ll be previewing the materials before the students have access so I can offer suggestions to the instructors, and the other part means I’ll be closely watching the forum so I can break blockers as they come up.  So I’m taking notes as I watch the video as an adjudicator to the course materials, to guess possible student questions, and to expand my understanding of MongoDB.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;format&quot;&gt;Format&lt;/h2&gt;
&lt;p&gt;The first few steps involve the browser, then they switch to a lot of bash commands in the terminal.  I’ve gotten MongoDB running on PCs, I’ve used Bash with some luck although I haven’t tried it on Windows 10 yet, and I’ve used Mac default Terminal (which I prefer), and iTerm.  I’m now using iTerm on my day job computer, and I haven’t tried that (maybe tomorrow, fingers crossed some fires stay out), so this post will get updated.&lt;/p&gt;

&lt;p&gt;Basically Bash command will be followed by brief explanation.  Bash commands are the code snippets, assume you have to type enter after you type in the command.  This isn’t a post for learning Bash.  Check out &lt;a href=&quot;http://nodeschool.io/&quot;&gt;learnyoubash at node school&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;steps-for-mac-users&quot;&gt;Steps for Mac users&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;google &lt;code class=&quot;highlighter-rouge&quot;&gt;download mongodb&lt;/code&gt;, click on the link near the top that says &lt;span style=&quot;font-weight: 700&quot;&gt;MongoDB Download Center | MongoDB&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;Scroll down, click on the green button that says &lt;strong&gt;DOWNLOAD (tzg)&lt;/strong&gt;.  This will download the Current Stable Release, which it says if you search the page for that text. As of the first draft of this post, it was 3.2.6.  This mongo/node course uses 3.2.x&lt;/li&gt;
  &lt;li&gt;Open up a command prompt.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd ~/Downloads&lt;/code&gt; : Move into your Downloads directory&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls -lt&lt;/code&gt; List all the contents of the Downloads directory, look at what gets printed first.  It should say something like &lt;strong&gt;mongodb-osx-ssl-x86_64-3.2.6.tgz&lt;/strong&gt;.  It might be different depending on your mac, but it should definitely end with &lt;strong&gt;.tgz&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tar xvf mongobd-osx-ssl-x86_64-3.2.6.tgz&lt;/code&gt; Hint: use code completion.  Type the first few letters of the tgz file and hit the tab key.  This is un-tarring the file.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd mongodb-osx-x86_64-3.2.6&lt;/code&gt; Move into the file you just expanded. Notice no tar ball extension.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; List all the contents of that mongodb directory.  Notice the &lt;strong&gt;bin&lt;/strong&gt; directory.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd bin&lt;/code&gt; Move into the &lt;strong&gt;bin&lt;/strong&gt; directory.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls -l&lt;/code&gt; List all the contents of the &lt;strong&gt;bin&lt;/strong&gt; directory. Notice &lt;strong&gt;mongo&lt;/strong&gt; and &lt;strong&gt;mongod&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo root&lt;/code&gt; You need to become root so you can do the next step.  This is going to let you write/read mongodb documents.  You’ll probably need to type in your password.  Don’t expect to see any characters as you type it in.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir -p /data/db&lt;/code&gt; Create the directory that mongodb by default saves its data.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod 777 /data&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod 777 /data/db&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls -ld /data/db&lt;/code&gt; You should see something like &lt;strong&gt;root&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt; Get out of root&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;whoami&lt;/code&gt; You should see your computer’s username that you’re logged into.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./monngod&lt;/code&gt; This starts the MongoDB server. Notice &lt;strong&gt;on port 27017&lt;/strong&gt;.  That’s the default port, and will be more useful later when you connect the MongoDB Server through a driver.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control + t&lt;/code&gt; or open a new tab (top menu=&amp;gt;Shell=&amp;gt;New Tab), and move into that tab for the next few commands.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt; You should still be in &lt;strong&gt;bin&lt;/strong&gt;.  If you’re not, like if you’re using &lt;strong&gt;iTerm&lt;/strong&gt;, move back into it with &lt;code class=&quot;highlighter-rouge&quot;&gt;~/Downloads/mongodb-osx-x86_64-3.2.6/bin&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./mongo&lt;/code&gt; This starts the Mongo shell.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;db.names.insert({name: &quot;Your name&quot;})&lt;/code&gt;.  All this does is write to the server.  Expect to see &lt;code class=&quot;highlighter-rouge&quot;&gt;WriteResult({ &quot;nInserted&quot; : 1 })&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;db.names.find()&lt;/code&gt; You should see a json object with 2 fields: an _id field with an ObjectId, and a name field with the value you just typed.&lt;/li&gt;
  &lt;li&gt;Switch back to the tab that has the mongod server running&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control c&lt;/code&gt; This stops the server&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo root&lt;/code&gt; Become root again&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cp * /user/local/bin&lt;/code&gt; You’re copying the contents of the mongo bin directory to the &lt;strong&gt;/user/local/bin directory&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt; exit root&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;which mongod&lt;/code&gt; You should see &lt;strong&gt;/usr/local/bin/mongod&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; switch back to your home directory&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mongod&lt;/code&gt; You just started the mongod server from your home directory, which you’ll do from now on.&lt;/li&gt;
  &lt;li&gt;Switch into another tab. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;control c&lt;/code&gt; if you moved back to the tab where you had the mongo shell running before. &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; so you move to home directory. &lt;code class=&quot;highlighter-rouge&quot;&gt;mongo&lt;/code&gt;. You can start a mongo shell now.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Conclusion: To use the mongo shell, open command line, run &lt;code class=&quot;highlighter-rouge&quot;&gt;mongod&lt;/code&gt;, open another command line window, run &lt;code class=&quot;highlighter-rouge&quot;&gt;mongo&lt;/code&gt;. You can do this from any directory&lt;/p&gt;

&lt;h3 id=&quot;additional-feedback-based-off-of-setting-up-on-mac-with-iterm&quot;&gt;Additional feedback based off of setting up on Mac with iTerm:&lt;/h3&gt;
&lt;p&gt;When I tried ths on iTerm, I got stuck on step 11.  My work computer is a little older than my personal mac (2011 vs. 2014), and is running OS X 10.11.5  &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo root&lt;/code&gt; wouldn’t work on my work computer.  This didn’t matter if it was on Terminal or iTerm.  I digged around a little bit: I enabled root user from this &lt;a href=&quot;https://www.youtube.com/watch?v=qTtVhAEAs2Q&quot;&gt;youtube video&lt;/a&gt; but couldn’t figure out how to become root user, then I read into how El Capitan is ‘rootless’ from this blog post: &lt;a href=&quot;http://apple.stackexchange.com/questions/193368/what-is-the-rootless-feature-in-el-capitan-really&quot;&gt;http://apple.stackexchange.com/questions/193368/what-is-the-rootless-feature-in-el-capitan-really&lt;/a&gt;, but then I found the solution that was a lot easier than going through the 31 steps above: &lt;strong&gt;Use homebrew&lt;/strong&gt;.  Follow the steps on &lt;a href=&quot;http://www.hacksparrow.com/how-to-install-mongodb-on-mac-os-x.html&quot;&gt;this blog&lt;/a&gt; for a much faster approach to getting going with mongo. Otherwise, no significant insites on using iTerm.  I just need to dig into the documentation and get it working as well as my personal set up on Terminal with &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;oh my zsh&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-for-pc-users&quot;&gt;Setting up for PC Users&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Google &lt;code class=&quot;highlighter-rouge&quot;&gt;download mongo&lt;/code&gt; just like for mac, select the same website.  The site detects if you’re on a Mac or PC, so locate the most recent stable release and download the 64 bit version.&lt;/li&gt;
  &lt;li&gt;Switch to explorer and open into Downloads.  Unzip the MongoDB file.&lt;/li&gt;
  &lt;li&gt;Create a new directory and move the mongodb file from Downloads into that file.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir data&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir data/db&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;From the folder you moved the mongodb contents, you should be able to start the mongo server with &lt;code class=&quot;highlighter-rouge&quot;&gt;mongod&lt;/code&gt; and in a separate bash window, run &lt;code class=&quot;highlighter-rouge&quot;&gt;mongo&lt;/code&gt; to start the shell.  That’s it.  Test out the shell with a write and read.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 08 May 2016 00:00:00 -0700</pubDate>
        <link>http://nathanBrenner.github.io//recipe-for-starting-mongod</link>
        <guid isPermaLink="true">http://nathanBrenner.github.io//recipe-for-starting-mongod</guid>
        
        
      </item>
    
      <item>
        <title>Multi-step Forms</title>
        <description>&lt;p&gt;How do you create a form where you can navigate to multiple pages, and are able to submit the data only once?&lt;/p&gt;

&lt;p&gt;Should you have a single controller connected to multiple views?&lt;/p&gt;

&lt;p&gt;What’s an approach that takes advantage of the best parts of Angular 1.x?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nathan-j-brenner/multipage-form&quot; class=&quot;btn btn-info&quot; role=&quot;button&quot;&gt;See the code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I got hired a couple months ago as a contractor for an advertising agency to write responsive html emails. Not exciting work, no javascript, and table based layout, but I get to write code all day so what’s to complain?&lt;/p&gt;

&lt;p&gt;I’ve gotten a lot better at writting css, to the point where I can get emails done fairly quickly in part because a lot of the templates were built by me.  When I have time to spare, I’ve enjoyed refactoring an internal app, and in the last few days I made a breakthrough.&lt;/p&gt;

&lt;p&gt;For some backstory, the app was created by a senior dev, and there was a note in code that said “To future developer, I’m learning angular, so if this doesn’t look that great, sorry, enjoy fixing it”.  That’s not verbatim, but it was kinda the point, and after working on an ionic app with ng1.4.x in TypeScript, I had gotten used to some conventions and what some may call writing the angular way, like not using jQuery in an Angular app, or keeping a clearly defined line between server side code and client side code.  This blog will focus on how I drafted a solution to that separation, which in large part was made through using services.&lt;/p&gt;

&lt;p&gt;So imagine an angular app, perhaps one that you’ve written, and you’ve only got one controller.  You’re not really sure what the situation would look like to justify multiple controllers, so you’re single controller has a lot of code in it.  In my case, the app is a multipage form, and after digging around at some blogs, I found where the author got his inspiration: &lt;a href=&quot;https://scotch.io/tutorials/angularjs-multi-step-form-using-ui-router&quot;&gt;https://scotch.io/tutorials/angularjs-multi-step-form-using-ui-router&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wasn’t a big fan of this approach, and recently I’ve been thinking about some significant conventions such as how controllers should be kept slim, controllers should be limited to a single view, and services should be used to handle data.  In this case, I wanted to take the existing app, and create an individual controller per view, and to pass along the data in each controller along each step.  More specifically, the submit button on each page would send the data of that controller to a service, along with navigating to the next state.&lt;/p&gt;

&lt;p&gt;If you want to see the demo of where the app currently stands, clone &lt;a href=&quot;https://github.com/nathan-j-brenner/multipage-form&quot;&gt;this repo&lt;/a&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run dev&lt;/code&gt;.  Sorry, nothing live yet, I kinda forgot how to generate it on GitHub, and this might be a good oppertunity to play with &lt;a href=&quot;https://zeit.co/now&quot;&gt;Now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At this point, I found this blog: &lt;a href=&quot;https://thinkster.io/a-better-way-to-learn-angularjs/services&quot;&gt;https://thinkster.io/a-better-way-to-learn-angularjs/services&lt;/a&gt;, and I put it together so I could see it in practice and reference as I refactored the app in the office from my gitHub repo &lt;a href=&quot;https://github.com/nathan-j-brenner/sharedData&quot;&gt;sharedData&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hardly slept that night because I was so excited to finally slim down the massive single controller, but when I got to work, I remembered that the author was using &lt;code class=&quot;highlighter-rouge&quot;&gt;angular-ui-router&lt;/code&gt;, more specifically embedded routes.  There was the main route: &lt;code class=&quot;highlighter-rouge&quot;&gt;form&lt;/code&gt;, with a controller, then all the sub-routes.  I had played with the ui-router before, but taking something existing, and refactoring to this extent required some time to look at the documentation, play around with it, and build a small version of what I wanted to do.  Unfortunately, that was partly Saturday afternoon (after brewing beer), and Sunday afternoon. The result was this app: &lt;a href=&quot;https://github.com/nathan-j-brenner/multipage-form&quot;&gt;multipage-form&lt;/a&gt;.  It’s all front-end, and I used John Papa’s &lt;code class=&quot;highlighter-rouge&quot;&gt;lite-server&lt;/code&gt; (on npm), so I could debug with &lt;code class=&quot;highlighter-rouge&quot;&gt;ng-inspector&lt;/code&gt;.  It really came out of taking the &lt;a href=&quot;https://angular-ui.github.io/ui-router/&quot;&gt;Getting Started&lt;/a&gt; guide for the UI-router, and combining it  with the thinkster blog. A lot of it was piece by piece refactoring from the services app and unit testing (going to the browser and seeing if the tiny change gave me what I expected, and debugging when it didn’t.  When I had the behavior I wanted, I tried thinking of something fun to integrate it with, and somehow Monty Python came to mind.  That brought in an additional service for the questions, and I used the &lt;code class=&quot;highlighter-rouge&quot;&gt;Math&lt;/code&gt; object to randomly generate the third question, along with slimming down the &lt;code class=&quot;highlighter-rouge&quot;&gt;Responses&lt;/code&gt; Service, and the Controllers so they each basically had the same code, but were bound to separate views.&lt;/p&gt;

&lt;p&gt;So there were two huge gains in writting this app that took about 4 hours: I gained a stronger understanding of how to implement services and how to write slim controllers, which I’ll directly apply on a larger app tomorrow, and how to use use some other conventions, like not using &lt;code class=&quot;highlighter-rouge&quot;&gt;$scope&lt;/code&gt; at all (I think one of the two apps I started with used it.  But the biggest take-away that I was lacking from Friday morning was…Each state not only required it’s own controller, but the states couldn’t be embedded.  Each state had to be it’s own separate form that had it’s own properties, and when you’re ready to move onto the next state of the form, you had to do two things: Change state with &lt;code class=&quot;highlighter-rouge&quot;&gt;$tate.go()&lt;/code&gt;, and define the properties on the service that was being used in each state of the form.  After all the questions of the form, there’s a view that shows all the data that was collected (which is retrieved with a controller), and has a submit function, at which point the Service would make a post request to the API, but in this case it just shoots out an alert box with an appropriate response. Next is a Submittion state, which just verifies that you’ve completed the form and requests that you start the process all over again, where the data is reset and the state goes back to the first page of the form.&lt;/p&gt;

&lt;p&gt;Where to next? The goal was to make a small app, basically a prototype, so I can debug myself on the larger app, and more sequentially move through this refactoring.  But there’s other improvements I’d like to do with this app: I’ve been playing with the ng Form validation, so that’ll probably be the next thing I add into this app before I put it in every state of the app at work.  I’d like to bring in Webpack, and I think I’ll probably use a &lt;a href=&quot;http://blog.teamtreehouse.com/26017-2&quot;&gt;blog&lt;/a&gt;from a developer I’ve worked with in the past.  Adding unit tests would be good, and so would trying out the navigating from ng1 to ng2 through ngForward.  I’d love to look at the ng1 version next to the ng2, especially with the good things I’ve been hearing about forms.  And rewriting the same app with Typescript as also been on my mind.  I started doing that on Friday, but there was too much about Typescript that I wasn’t used to, so I kept the focus in on what I would need to do to refactor that app as it currently stands.&lt;/p&gt;

&lt;p&gt;All in all, this was a project I created so I could create more form-apps in the future without reinventing the wheel.  Using paper forms, like at the dmv or doctor’s offices, or at restraunts drives me nuts.  I’d love to walk down the street frommy house to the small-business sushi restraunt and offer them something like this so I can order sushi easier, and maybe they can see a roi.&lt;/p&gt;
</description>
        <pubDate>Sun, 08 May 2016 00:00:00 -0700</pubDate>
        <link>http://nathanBrenner.github.io//multipage-form</link>
        <guid isPermaLink="true">http://nathanBrenner.github.io//multipage-form</guid>
        
        
      </item>
    
      <item>
        <title>Refactoring from $scope to vm in ng1.x</title>
        <description>&lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;$scope&lt;/code&gt; brings on some issues, which is evident as it’s been taken out of Angular2.  With your existing Angular 1.x apps, one of the ways you can refactor is to strip out all instances of &lt;code class=&quot;highlighter-rouge&quot;&gt;$scope&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There’s three steps you need to take for this to work:&lt;/p&gt;

&lt;h4 id=&quot;first&quot;&gt;First&lt;/h4&gt;

&lt;p&gt;Change the declarations of your controllers from the name they have to &lt;code class=&quot;highlighter-rouge&quot;&gt;vm&lt;/code&gt;.  VM represents view-model, and is a convention that’s a part of the John Papa Angular styleguide.&lt;/p&gt;

&lt;p&gt;For example, within an app, where you have a controller such as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div ng-controller=&quot;mainController&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;change it to&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div ng-controller=&quot;mainController as vm&quot;&amp;gt;&amp;lt;/div&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you declared your routing, such as with the &lt;code class=&quot;highlighter-rouge&quot;&gt;angular-ui-router&lt;/code&gt;, you might have&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$routeProvider.state( &quot;main&quot;, {
	url: &quot;/main&quot;,
	templateUrl: &quot;./templates/main.html&quot;,
	controller: &quot;mainController&quot;
	});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Change the last line to &lt;code class=&quot;highlighter-rouge&quot;&gt;controller: mainController as vm&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;second&quot;&gt;Second&lt;/h4&gt;

&lt;p&gt;Within your views, every time you have a property, such as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ng-model = &quot;name&quot; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;reference the property as part of vm, which in this case would look like&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ng-model= &quot;vm.name&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;third&quot;&gt;Third&lt;/h4&gt;

&lt;p&gt;Within the controller, declare &lt;code class=&quot;highlighter-rouge&quot;&gt;vm&lt;/code&gt; as a variable set to &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;, then replace &lt;code class=&quot;highlighter-rouge&quot;&gt;vm&lt;/code&gt; everywhere you have &lt;code class=&quot;highlighter-rouge&quot;&gt;$scope&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example, given this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;angular.module(&#39;app&#39;).controller(&#39;MainController&#39;, MainController);

function MainController($scope) {
	$scope.numb = 5;
	$scope.add = function(){ 
		$scope.numb += 1;
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Change to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;angular.module(&#39;app&#39;).controller(&#39;MainController&#39;, MainController);

function MainController() {
	var vm = this;
	vm.numb = 5;
	vm.add = function(){
		vm.numb += 1;
	}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There’s plenty of blogs about why you should get off the habit of using &lt;code class=&quot;highlighter-rouge&quot;&gt;$scope&lt;/code&gt;, and there’s justifications for using &lt;code class=&quot;highlighter-rouge&quot;&gt;ctlr&lt;/code&gt; in place of &lt;code class=&quot;highlighter-rouge&quot;&gt;vm&lt;/code&gt; for the controller as syntax.  Bottom line, it looks cleaner, it’s easier to use, and you don’t have to work with embedded scopes.&lt;/p&gt;

&lt;p&gt;I had heard of using &lt;code class=&quot;highlighter-rouge&quot;&gt;controllerAs&lt;/code&gt; syntax before, and how John Papa was a strong advocate for it, but it took me figuring out on my own how to effectively make this shift. Ironically, here’s a blog he did that looks like it covers the same premise, and proably goes into more depth: &lt;a href=&quot;http://johnpapa.net/angularjss-controller-as-and-the-vm-variable/&quot;&gt;http://johnpapa.net/angularjss-controller-as-and-the-vm-variable/&lt;/a&gt;
Also, if you’re learning angular 1, interested in learning angular2 and trying to see the connective glue between ng1 and ng2, or have some existing apps and you’re trying to find work but you keep getting told you’re code isn’t good enough, try refactoring some of it to these conventions: &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide&quot;&gt;https://github.com/johnpapa/angular-styleguide&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 08 May 2016 00:00:00 -0700</pubDate>
        <link>http://nathanBrenner.github.io//$scope-to-vm</link>
        <guid isPermaLink="true">http://nathanBrenner.github.io//$scope-to-vm</guid>
        
        
      </item>
    
      <item>
        <title>ExpressWorks with Typescript</title>
        <description>&lt;p&gt;Typescript is a superset of Javascript. It’s a transpiler for es6 to es5 and offers typechecking, which you don’t get with Babel.  However, there’s some configuration and some weird terminology. It’s easy for me to forget some of this stuff, so I like to use the node school workshops as an oppertunity to expand my understanding, which is a bonus: I get to learn the content in the workshops, and I get to learn and practice es6.&lt;/p&gt;

&lt;h2 id=&quot;why-do-i-like-writing-typescript-instead-of-plain-javascript&quot;&gt;Why do I like writing typescript instead of plain javascript?&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Code completion: As soon as I start typing a reference to an object, such as jQuery &lt;code class=&quot;highlighter-rouge&quot;&gt;$.&lt;/code&gt;, I get a modal window with the list of possible methods or properties I can use with helpful information like the definition and the parameters. I can select any of them and get tab completion.&lt;/li&gt;
  &lt;li&gt;Code-smart spell checking: If I misspell something, if I assign a property or method to the wrong type, or if I give the wrong type, such as providing a number instead of a string as an argument to a function, I get feedback in the editor just like I do with the red lines in word processors.&lt;/li&gt;
  &lt;li&gt;I get to write State-of-the art code instead of state-of-the-web, which means I’m also learning more about es6 syntax and learning more about javascript.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;heres-the-steps-read-on-for-the-explantion&quot;&gt;Here’s the steps, read on for the explantion.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nathan-j-brenner/node_school/tree/master/ts_expressworks&quot;&gt;git directory&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;complete-before-you-start-a-node-school-workshop&quot;&gt;Complete before you start a node school workshop:&lt;/h4&gt;
&lt;p&gt;install node/npm&lt;br /&gt;
npm install -g typescript&lt;br /&gt;
npm install -g tsd&lt;/p&gt;

&lt;h4 id=&quot;specifics-for-everyworkshop-but-more-specific-for-express&quot;&gt;Specifics for everyworkshop, but more specific for Express:&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir expressworks&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir dist&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm init&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, add in &lt;code class=&quot;highlighter-rouge&quot;&gt;scripts&lt;/code&gt;:   &lt;br /&gt;
 “tsc”: “tsc”,
 “tsc:w”: “tsc -w –outDir dist”,
 “start”: “npm run tsc:w”&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;touch tsconfig.json&lt;/code&gt;¸&lt;/li&gt;
  &lt;li&gt;Add in your compiler options, such as:&lt;br /&gt;
 &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  
     &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  
         &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;module&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;commonjs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;target&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;es5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  
         &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;noImplicitAny&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  
         &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;removeComments&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tsd install express -S&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install express -S&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -g expressworks&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tsd rebundle&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;touch 1-hello-world.ts&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;First line of 1-hello-world.ts: &lt;code class=&quot;highlighter-rouge&quot;&gt;/// &amp;lt;reference path=&quot;typings/tsd.d.ts&quot; /&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Write the solution&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm start&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;create another tab in your terminal, &lt;code class=&quot;highlighter-rouge&quot;&gt;cd dist&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;expressworks 1-hello-world.js&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;the-why&quot;&gt;The why:&lt;/h2&gt;
&lt;p&gt;before: Installing &lt;code class=&quot;highlighter-rouge&quot;&gt;typescript&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;tsd&lt;/code&gt; globally lets you run the &lt;code class=&quot;highlighter-rouge&quot;&gt;tsc&lt;/code&gt; commands in the terminal.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;With nodeschool courses, I like to write the course name as the directory.  All of the courses I’ve worked on are in the &lt;code class=&quot;highlighter-rouge&quot;&gt;node_school&lt;/code&gt; directory, and they serve as code examples for future reference. I don’t get a lot of time to work on these, it’s usually a couple minutes in the middle of the day when I’m waiting on feedback from qa or I’ve got some time in the weekend when my son is napping.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dist is the directory for all javascript files.  Call it what you want, I like the idea of &lt;code class=&quot;highlighter-rouge&quot;&gt;dist&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; directories, but the only thing in it is &lt;code class=&quot;highlighter-rouge&quot;&gt;*.js&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I’m going to be using npm modules, so every module I install, I do this first, then add the &lt;code class=&quot;highlighter-rouge&quot;&gt;-S&lt;/code&gt; flag so it get’s saved into &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This seems to be a realiable way for me accomplish two things: The &lt;code class=&quot;highlighter-rouge&quot;&gt;*.ts&lt;/code&gt; files are separated from the &lt;code class=&quot;highlighter-rouge&quot;&gt;*.js&lt;/code&gt; files, and the &lt;code class=&quot;highlighter-rouge&quot;&gt;*.ts&lt;/code&gt; files get compiled in the background to &lt;code class=&quot;highlighter-rouge&quot;&gt;*.js&lt;/code&gt; so I don’t have to run &lt;code class=&quot;highlighter-rouge&quot;&gt;tsc *.js&lt;/code&gt; over and over.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tsconfig.json&lt;/code&gt; keeps your configuration on how you want typescript to work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This installs a typed definition file of the express framework, so you get access to all those methods and properties when you want them in the ts files. This creates a &lt;code class=&quot;highlighter-rouge&quot;&gt;typings&lt;/code&gt; directory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Look at &lt;code class=&quot;highlighter-rouge&quot;&gt;./typings/express.d.ts&lt;/code&gt; for which version of express has been defined.  Npm install that version.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install the node school workshop. This can be done at any time, I just like doing it here because I’m about to start working on the workshop.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Any time you add new module definitons, you’ll need to rebundle tds so your ts files will know where to look for references of definitions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;So I can get tab completion, I like to name my workshop exercises as &lt;code class=&quot;highlighter-rouge&quot;&gt;number-workshop_expercise.ts&lt;/code&gt;, so when I’m ready to verify it, I can just hit &lt;code class=&quot;highlighter-rouge&quot;&gt;workshop verify number tab&lt;/code&gt;. Since the exercises scaffold upon eachother, this is an easy way to keep them appearing in order in the directory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The first line of every ts file needs to have this text, otherwise when you complile the ts, you’ll get an error that says that typescript doesn’t know about these external files, even though it works fine in the editor and the js files will pass if you have the correct solution.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sorry, no freebes, but you wouldn’t have to look hard for them.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This starts the compiler&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Keep the compiler running, and move into the js files directory so you can check the solutions.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 17 Apr 2016 00:00:00 -0700</pubDate>
        <link>http://nathanBrenner.github.io//TS_expressworks</link>
        <guid isPermaLink="true">http://nathanBrenner.github.io//TS_expressworks</guid>
        
        
      </item>
    
      <item>
        <title>Takeaways from Mongo University</title>
        <description>&lt;p&gt;Over the last 7 weeks, I worked through the MongoDB course for Node.js developers.  This is a free course offered online, and I learned a lot more than I expected.&lt;/p&gt;

&lt;p&gt;Before I started the course, I knew that MongoDB was a NoSQL database system.  SQL databases, such as MySQL and PostgreSQL, use tables much like how Microsoft Excel appears, to represent and maintain persistent data.  MongoDB doesn’t use that table system, and instead builds records based on JSON, or javasript Obect Notation. I could start a mongoD and mongo shell on my computer, and I had used Orchestrate on some projects. Orchestrate.io is a cloud based database system similar to Mongo, and is fairly easy to use. More of my time with databases had been spent with Postgresql, so I could insert data into a document, and configure a schema.&lt;/p&gt;

&lt;p&gt;What I was hopeing to get out of the course was to become much more familiar and comfortable with crud operations.  CRUD are the operations for databases.  Create, Read, Update, Delete: Create a new record, query that record, make changes to that record, and remove that record from the database.  I really wanted to have a strong understanding on how to do something like create a user login, and over the period of the course I realized that I wanted to know more about Node.js and writing backend code.&lt;/p&gt;

&lt;p&gt;Each week, at 9am on Tuesday, a slew of videos (ranging from 1 minute long to 12 minutes long) with short quizzes, and a few homework assignments (between 3 and 5) were made available on their learning management system.  The videos were on youtube, and there was a discussion view for students to post questions.  With most of the homework, there was evidence if the answer would be valid, and all the quizz answers were explained in detail.  On the final week, 10 questions were posted .  Throughout the course, some of the assessment was multiple choice, some used MongoProc (which ran tests on your database), and some required an answer or a validation code.&lt;/p&gt;

&lt;p&gt;The first week was introduction.  Topics covered were installation, starting the MongoD instance, the Mongo shell, and an introducion to the Node Express server.&lt;/p&gt;

&lt;p&gt;The second week covered CRUD.  With MongoDB, a query is called by the db.collection followed by an opperation.  From the shell, db is already specified since you are already in a database, which you can specify.  Collections are a group of records, or documents for Mongo.  A query searched through a collection and returns the documents that meet the query.  Documents can be Read with the find or findOne method, which works basically the same as the delete, or for Mongo the remove method.  Create (or the insert method for mongo) also works similar to the read method.  Updates a little more complicated, since a single update will remove the document and replace it with the fields that you specify.  To avoid this, the update query takes two parameters: the document you’re querying, followed by the $set operator with the fields you want to change.  That’s CRUD in a nutshell.&lt;/p&gt;

&lt;p&gt;The third week covered schema design principals. Mongo has been considered schema-less, which means multiple documents in the same collection don’t necessarily have to have the same columns like a sql db would.  Documents are javascript objects, so the properties of a document retain whatever values as desired, even embedded documents, such as arrays or other objects.  For example, in a collection that maintains blog posts, a single post can have an embedded property for comments made to that array with objects that contain properties such as the author of that comment on that post, the date the comment was made, and the contents of the post.  A lot has to be considered for the design of a schema.  Since schema’s don’t have to match, it’s usually best if they don’t match for a specific reason.&lt;/p&gt;

&lt;p&gt;Week 4 covered performance.  This has to do with the time it takes for a query to return a given object or set of obects.  The time spent on a query, as indicated by how many documents the query looks at, can be reduced if indexes are approapriately used.  Every document has an _id field, and if not specified with one, is provided with one.  That field is indexed, meaning it’s sorted in a specific way.  Other indexes can be created, and should resemble the types of queries the end user might make.&lt;/p&gt;

&lt;p&gt;Week 5 covered the aggregation pipeline.  Aggregation finds information relevate to the entire collection, such as the average grade a class has over a group of classes. The pipeline resembles more chaining, which in this case are objects with query opperators built on top of eachother.&lt;/p&gt;

&lt;p&gt;Week 6 covered application engineering, such as replication and sharding.  These are concerns for working with a large database system in the event that a database goes down and how collections recover from those failures.&lt;/p&gt;

&lt;p&gt;In the 7th week, along with the final exam, there was content on Mongoose.  Mongoose is an ODB, and Object-Record-Mapper, which provides a layer on top from Mongo and Node and has some added functionality. These videos quickly walked through some code on how to crewate the same blog that the earlier weeks had done without the additional layer.&lt;/p&gt;

&lt;p&gt;Since this course was for node developers, so there was code examples represented in an application, and I was really happy I had worked with node before because there were some huge leaps in what the homework expected students to do.  The quizzes that went with the vides checked for understanding at a very basic level, and the final examp mirrored the homework questions.  As for the discussion, I wish I had gotten more out of it.  I’m a fan of collaboration, so when I get stuck on a problem for a while, I’d like to be able to seek help without getting the answer.  If I get the answer without a lot of stuggle on my own, I’ll probably forget what I learned. But some help is necessary.  There was some collaboration in the discussion board, but the Mongo Unversity doesn’t want any code sharing, and the ta often came across defensive instead of helpful.  Still, the course was very interesting, and it kept my engagement even on the topics like indexes, sharding, and agggregation where I didn’t feel like I had somewhere directly to apply what I had learned outside of the course.&lt;/p&gt;

&lt;p&gt;For now, I want to get better at working with node.  I’m working through a course on &lt;a href=&quot;https://www.edx.org/course/introduction-mongodb-using-mean-stack-mongodbx-m101x&quot;&gt;MEAN&lt;/a&gt;, which I hope to get a better understanding of how angular connects with node. This is a little ironic, since I’m working on an app with another developer and I’ve figured out where this happens.  Data is stored on the database, which is accessed from a service that connects to the backend api.&lt;/p&gt;

&lt;p&gt;Also, since I’ve expanded my understanding of NoSQL, I’m interested in SQL.  Codecademy has a tutorial on the subject, which I’ll probably work through soon. I’d also like to read &lt;a href=&quot;http://www.amazon.com/MongoDB-Definitive-Guide-Kristina-Chodorow/dp/1449344682/ref=sr_1_1?ie=UTF8&amp;amp;qid=1448932247&amp;amp;sr=8-1&amp;amp;keywords=mongodb&quot;&gt;MongoDB: The Definitive Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also recently found a new learning source. &lt;a href=&quot;http://www.freecodecamp.com/&quot;&gt;Free Code Camp&lt;/a&gt; has a fairly extensive sequence on stuff I should know, so I started working through it.  I’m finding gaps in my learning and doing a lot of review.  It’s keeping me busy since I can’t be as aggresive about looking for work now that I’m watching my son all day.  If a job comes my way, I’d love to work all day.  Until then, it’s not so bad raising him.  Thanksgiving was a couple days ago.  I took a few days off from the computer and visited family in Las Vegas.&lt;/p&gt;

&lt;p&gt;I got a lot out of this free course, and I would probably pay for it since it had the feedback.  If you want to take some time, I’d definately check it out.  They have courses specific to other languages as well.&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Nov 2015 00:00:00 -0800</pubDate>
        <link>http://nathanBrenner.github.io//m101JS</link>
        <guid isPermaLink="true">http://nathanBrenner.github.io//m101JS</guid>
        
        
      </item>
    
      <item>
        <title>Why are you passionate about coding?</title>
        <description>&lt;p&gt;This is a common interview question. From a look at my resume, the question might even be asked in a way like “You’ve obviously passionate about the work you did in this other area, so what drives you in programming?”&lt;/p&gt;

&lt;p&gt;I love programming because it can be a very abstract way to create some pretty amazing solutions.  For example, say I want to know immediately I get a new email.  When I was in high school, I used to obsessively get on the computer, which involved dialing up the server, log into yahoo, only to be disappointed that there was nothing new.  Now I’ve got a device that sits in my pocket and I get a push notification for a bunch of different apps, including gmail.&lt;/p&gt;

&lt;p&gt;How does stuff like that work? Did the demand cause the solution or did some computer geek realize the potential of a device that can store data? I love taking things appart, learning how the individual pieces work together, and put the thing back together.  If I can add in some functionality, or clean up how the piece is put together, then even better. I’m not ok with going along with the status quo.  I want to ask why questions like “Why are we doing it this way”, or “How can we make this better”?&lt;/p&gt;

&lt;p&gt;As far as work goes, I started a course on MongoDB today, and I started working on a mobile app a few days ago.&lt;/p&gt;

&lt;p&gt;MongoDB offers free online courses, which have a weekly series of videos, quizzes, and homework assignments.  I thought this would be a good way to get more in depth knowledge of a non-relational database.&lt;/p&gt;

&lt;p&gt;The mobile app is a project another developer included me into.  It uses the ionic framework, which empowers angular web developers to create mobile apps without writing any ios or android native code.  This project is also great because it’s forcing me to start looking at and writing in TypeScript with the new es6 syntax, and I’m able to see how Angular is currently being written by a more experienced web developer.&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Oct 2015 00:00:00 -0700</pubDate>
        <link>http://nathanBrenner.github.io//why-coding</link>
        <guid isPermaLink="true">http://nathanBrenner.github.io//why-coding</guid>
        
        
      </item>
    
      <item>
        <title>Learn WordPress in a Day</title>
        <description>&lt;p&gt;Today made me really appreciate the depth of knowledge I have in software programming and proud of what I can do if the only tools I had were a text editor and a terminal.&lt;/p&gt;

&lt;p&gt;I participated in a local event, the first of it’s kind, with the goal to teach people with no experience with WordPress how to create a site.  This was something the community asked for in the last WordCamp, and a few volunteers decided to make it happen.  It started as an event serving 25 people, and grew to 100 split between two days.  Also, most of the people at the event had little to no experience writing html and were much older than the tech savy Milenial generation.  My grandma, who is in her 70’s and has a smart phone but hates the internet, could have been at this event and would be able to make a site.&lt;/p&gt;

&lt;p&gt;The presentators were really straight forward, and stuck to their objectives.  They would show how to do something, asking the participants to just watch first, then would join and make the changes.&lt;/p&gt;

&lt;p&gt;The definition of front-end and back-end was really interesting.  When I think of backend, I think of communicating with a server with http requests and communicating with a database. Today, any changes that were made was considered the back-end and the front-end was how the changes appeared in the browser.&lt;/p&gt;

&lt;p&gt;Outside of this class, I’m teaching myself how to create custom themes.  The code is on my local apache server, and I’m applying wordpress php functions to fit the needs of the site I want to make.  Before I made the wordpress version, I created the static version, so a lot of the php work is looking at the codex to find the function that will cause the effect I’m looking for.&lt;/p&gt;

&lt;p&gt;There’s an amazing community out there creating pluggins, and it kinda makes me sad at how easy it is to add something that the person creating the site has so little knowledge of what code is causing that behavior. It also makes me realize how easy it would be for me to create websites with wordpress. When I see the DOM, I can visualize how the html.&lt;/p&gt;

&lt;p&gt;The day long presentation went really well with the participants.  We started with a theme that didn’t have any posts and pages, and created pages for home, about, blog, services, and contact.  We were provided the content for those pages, so we created those pages and posts and added the content.  As far as pluggins, we created a contact form on the contact page, we added a titled mosaic set of pictures that are reordered each time the user visits the page, we added a google map, and at the end we viewed the finished website with another theme.&lt;/p&gt;

&lt;p&gt;There were a couple things I picked up on, like a great explanation between wordpress.com and wordpress.org.  The .com site provides oppertunities for people to create free sites with limited control, and .org provides the codex and is a connection to the wordpress community.  I hope a lot of those new to wordpress go to the Portland WordCamp in October.  I bet I’d get a lot out of it as far as networking and some knowledge with the more advanced topics.  Unfortunately, I have to work for the Army that day.  In any case, I’ll continue learning how to manipulate this content management system.  Developers, like me, are able to create client based solutions by creating or revising themes in a very short timeframe, and are able to bring business owners a lot of power to bring their products to the web while being able to manage their own content of that site.  I hope I can find some work doing this.  It’s less involved than creating javascript webapps, but if writing php can give me the oppertunity to provide for my family and time to add more to my professional development, then I’d love the oppertunity.&lt;/p&gt;

&lt;p&gt;As I gain experience with wordpress, I’m looking for a place where I could apply what I’ve learned.  Before my son was born, I played with the idea of creating a jekyll site for him that my wife and I could use to communicate with our family and friends, instead of depending on facebook so much.  Maybe instead, I’ll create a wordpress site.  I’m not sure if I’d go as far as creating a custom theme, but I guess if I did, I’d try to make it reflect our lives in the Pacific Northwest.&lt;/p&gt;
</description>
        <pubDate>Sun, 27 Sep 2015 00:00:00 -0700</pubDate>
        <link>http://nathanBrenner.github.io//wordpress-in-a-day</link>
        <guid isPermaLink="true">http://nathanBrenner.github.io//wordpress-in-a-day</guid>
        
        
      </item>
    
  </channel>
</rss>
