<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nathan Brenner</title>
    <description>A sample of my work and thoughts</description>
    <link>http://jekyllSample.com/</link>
    <atom:link href="http://jekyllSample.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 23 Aug 2015 18:05:44 -0700</pubDate>
    <lastBuildDate>Sun, 23 Aug 2015 18:05:44 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>PDX TechCrawl 2015</title>
        <description>&lt;p&gt;This was the fourth annual event of this type, and I was really impressed with it.  This event maxed out on it’s reservation space, which was a mere 1,129 people, and I’m sure there were more that ended up showing up for the kick-off.&lt;/p&gt;

&lt;p&gt;A tech crawl is the tech spin off of a beer crawl.  Instead of walking to a bunch of different microbreweries in one sprint, tech companies on the east side of the Willamette River opened their doors for visitors. As this event has grown in participants each year, there were two possible tracks for people to take: A track specific to companies that are agencies, whereby they create and sell their services and products for other companies, and companies that build and sell their own products.&lt;/p&gt;

&lt;p&gt;While I was at Porland Code School for JavaScript Immersion, I had a few field trips of tours of some of the tech companies in the area.  This event went well beyond that experience.  Instead of the focus on just seeing what an office and work space looks like and being able to talk to say one representative of the company, this event was more about connecting with some of the people in these companies and being able to meet other developers from other companies.&lt;/p&gt;

&lt;p&gt;Sometimes there are meetups that I go to and I find a huge gap between the amazing developers out there, who are often leeding discussions and presentations, and then students from code schools that have a limited scope on the field.  At this event, I found myself talking to a lot of developers, especially from the front-end.&lt;/p&gt;

&lt;p&gt;A challenge with events like this for me is that I haven’t found my group to gravitate toward.  I wandered between groups looking for conversations.  I think I ran into two familar faces, and surprisingly no one from Portland Code School.  I have to really let myself go where I want to go and have conversations with people beyond “Hey, you hardly know me, but you should let me play with your code”.  Sometimes the conversations start there with the basic question “What do you do?”, and I was surprised a few times when the conversation would move to “We’re actually looking too”, followed by “What have you done?”.  &lt;/p&gt;

&lt;p&gt;I had several of those conversations last night and I’m looking forward to connecting with some of those people, but there were also several conversations about things outside of tech.  I think for me, it always starts with the art.  What drives you to do something? What are you passionate about?  What drives you crazy?  I love that internal feeling of working on something that drives you crazy (in a good way), and I love talking and working with people that can speak   It’s really incredible how many retired teachers and musicians I’ve met that turned to technology to find what I’m experiencing, which is the ability to be an artist in a different area than where you thought was the only place you could do that.  The job is just a vehicle to exercise those passions.  The language doesn’t matter so much as is the core ability to communicate.&lt;/p&gt;

</description>
        <pubDate>Thu, 20 Aug 2015 00:00:00 -0700</pubDate>
        <link>http://jekyllSample.com/pdx-tech-crawl</link>
        <guid isPermaLink="true">http://jekyllSample.com/pdx-tech-crawl</guid>
        
        
      </item>
    
      <item>
        <title>Learning to code</title>
        <description>&lt;p&gt;How did I learn to code? That’s probably not so much as important as how should you go about learning to code, but maybe my experience can give you some directions or it can give you an indication on what I know and how I think.&lt;/p&gt;

&lt;p&gt;I had prior experience with Khan Academy.  I used their app to refresh myself on public education mathamatics.  I didn’t spend very much time there because I got the feeling like the audience was targeted to children.&lt;/p&gt;

&lt;p&gt;I found Portland Code School, and they had a partnership with Treehouse.  Treehouse is an incredible resource, and from what I’ve seen in other online education platform, treehouse does much more than anything I’ve seen before.  Treehouse has courses on an incredible range of topics across multiple languages.  I’ve focused on html, css, and javaScript but I’ve completed some courses in php, python, design, development tools, business, wordPress, java, and digital literacy.  I haven’t touched Ruby, Android, and iOS yet.&lt;/p&gt;

&lt;p&gt;Each course has subtopics, which make up badges that you can earn.  Within a badge, there are a series of videos and assessments.  Watching a video earns a user one point, completing an assessment (like a quiz or code challenge) earns you more points, and completing a badge and later a course earns you more points.  As of this post, I’m at 24,640 points, which seems like a lot but it’s just an indication really of how eager I am to learn.&lt;/p&gt;

&lt;p&gt;Treehouse also has tracks, which group a series of courses between sometimes one language to mulitple langauges.  For example, the front end web development track has courses on html, css, and javaScript.  Often the tracks overlap a little bit, so completing additional tracks becomes less work due to the work previously completed.  For example, the Full Stack JavaScript track had a lot of duplicate courses in their front end javascript track.  When I had completed a couple of tracks, I queried the remaining courses in languages like html, css, and javaScript and I complete those as I come to them or when new courses are added, in the case with the Gulp.js. Also, the tracks do an incredible job at scaffolding my learning curve.  The sequence is great because each course builds on previous courses.  &lt;/p&gt;

&lt;p&gt;But treehouse is not a one stop solution to learning every thing you need to learn to code.  As engaging the videos are and how well the courses are scaffolded, and even with code challenges, there’s still a gap that online learning cannot fill, and there’s gaps in learning.&lt;/p&gt;

&lt;p&gt;As far as getting a more complete understanding on some topics, I’ve spent time on other free education sites like codecademy.  They’ve got a Commandline course in the works and it’s meshing really well with what I can already do in the terminal. Code wars is another interactive site, but I’ve had a hard time getting into it because I find it easy to get stuck without any support. But code wars really pushes me on javascript fundamentals.  NodeSchool.io has also a bunch of tutorials that run through the terminal, and I’m hoping to get into that more since I’m done with PCS.  That resource can be pretty challenging.  &lt;/p&gt;

&lt;p&gt;Beyond interactive sites, really the place I find myself dug into the most is in the documentation, which can be challenging because it comes down to how well the documentation is written and what experience the author intends the reader to have. A spectrum would span between jQuery (which I think is really easy to read) and nodejs.org (which I find difficult to read).  Intially, I also looked at w3schools but eventually switched to mdn.  These sites have core concepts with definitions and usually multiple examples for different cases.&lt;/p&gt;

&lt;p&gt;Even with all of these resources, they can only go so far without an oppertunity to be creative (where you have a goal to work towards) and an oppertunity to work with someone else. I’ve found that when I’ve pair programmed, in either role I learn a lot.  I suppose I would rather be the person that’s not stuck: I often feel like the other person that’s trying to help takes a while to figure out where I’m at, which is a lot of work.  That helper has to really figure out what and how you’re thinking to make a suggestion that the stuck person is looking for.  &lt;/p&gt;

&lt;p&gt;By and large, code bootcamps like Portland Code School provided the oppertunity to get that realistic exposure to working on projects.  I can’t imagine learning the full stack without their help, but I think they could do more in the role of recruiter if they continue to sell themselves to clients as a vehicle to get into a job in tech.  Often what makes pedagogical sense often conflicts with the realities of what the industry is like.  A good example of this is how students come out of college and how they stuggle when they get a job.  That in turn reinforces employers a bias that learning in a school is not equivelent to the actual experience of having a job.  The flipped classroom is supposed to ignore some of that pedagogy a little so that students do the job as they are learning, but that means the students have to experience a lot of failure and makes the teacher feel useless.&lt;/p&gt;

&lt;p&gt;At this point, I’ve wandering on sites like treehouse and codecademy along with meeting people in the tech industry with the hopes to find a place to work on a team on some new projects.  My wife just gave birth to our first child, so I’m trying to spend time at home and I’ve got to complete 2 more weeks of orders in a couple weeks from now.  When that’s done, I really hope I’ve got some projects that can also bring in some income.&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://jekyllSample.com/learning</link>
        <guid isPermaLink="true">http://jekyllSample.com/learning</guid>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll</title>
        <description>&lt;p&gt;This story, like others to come, started with a treehouse badge.  Actually, it started a few months ago when a guy I was working with was complaining about Jekyll.  Somewhere after that, I built a static-site generator and I saw how easy it was to post blogs…if you’re comfortable typing in a text-editor.  I’ve been coding since November 2014, so I’m more confortable with a text-editor than a word processor.  I’ve tried Atom and Brackets, but I started with Sublime so it never seems worth the learning curve.&lt;/p&gt;

&lt;p&gt;Treehouse came out with a course on Jekyll.  As I was learning about Jekyll, I had a client in mind.  Their site was slow and unresponsive, and it was a wordpress site.  Lots of pages, lots of difficult to read text and small pictures.  A possible solution seemed like a static site generator so that they could have more control over their content without depending on finding the right wordpress plugin.  I’ve got nothing against wordpress, I just came from the school of thought that thinks JavaScript can do everything and more than what php does.&lt;/p&gt;

&lt;p&gt;So this is the crud beginnings of my updated portfolio site.  I created a similar site with Foundation back in April, but enough has changed in how I think about programming that I didn’t want to fight that site any more.  It was an oppertunity to learn Foundation, and it was really helpful when I used Foundation on my SnapOR site.  Anyway, this site is live and there’s not much to it but at least it loads faster than the other site and it has my programming projects in the prospective of a historical context.  All that means is the first project is the most recent, and each one before that site shows you a glimpse at how I was thinking a few days or months ago. &lt;/p&gt;

</description>
        <pubDate>Thu, 30 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://jekyllSample.com/first-post</link>
        <guid isPermaLink="true">http://jekyllSample.com/first-post</guid>
        
        
      </item>
    
  </channel>
</rss>
